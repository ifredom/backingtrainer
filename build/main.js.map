{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/main/main.component.ts","../../src/pages/main/recent/recent.component.ts","../../src/util/Util.ts","../../src/player/midiplayerjs/utils.ts","../../src/dao/settings.ts","../../src/player/player.service.ts","../../src/pages/main/downloaded/downloaded.component.ts","../../src/pages/main/search/search.component.ts","../../src/pages/main/info/info.component.ts","../../src/pages/credits/credits.component.ts","../../src/pages/downloads/downloads.component.ts","../../src/pages/tuner/tuner.component.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/player/midiplayerjs/player.ts","../../src/player/midiplayerjs/track.ts","../../src/player/midiplayerjs/constants.ts","../../src/dao/dao.ts","../../src/player/musicxmlplayer.ts","../../src/player/musicxml2svg.ts","../../src/pages/main/search/search.service.ts","../../src/pages/tuner/pitchdetect.ts","../../src/pages/tempo/tempo.component.ts","../../src/player/midiplayer.ts","../../src/player/mp3player.ts","../../src/pages/trainer/trainer.component.ts","../../src/pages/main/sort/sort.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 171;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 171\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 216;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 216\n// module chunks = 0","import { Component } from '@angular/core';\nimport { RecentPage } from './recent/recent.component';\nimport { DownloadedPage } from './downloaded/downloaded.component';\nimport { SearchPage } from './search/search.component';\nimport { InfoPage } from './info/info.component';\nimport { Tab } from 'ionic-angular';\nimport { MenuController } from 'ionic-angular';\n\n@Component({\n    templateUrl: 'main.component.html'\n})\n\nexport class MainPage {\n    tab0: typeof InfoPage = InfoPage;\n    tab1: typeof RecentPage = RecentPage;\n    tab2: typeof DownloadedPage = DownloadedPage;\n    tab3: typeof SearchPage = SearchPage;\n\n    private currentTab: Tab = null;\n\n    constructor(private menu: MenuController, ) {\n    }\n\n    ionViewWillEnter() {\n        this.enableMenus();\n    }\n\n    ionViewWillLeave() {\n        this.disableMenus();\n    }\n\n\n    /**\n     * @name enableMenus\n     * @description Enable the corresponding menu to the selected tab\n     */\n    private enableMenus() {\n        if (this.currentTab != null) {\n            if (this.currentTab.root === RecentPage) {\n\n            } else if (this.currentTab.root === DownloadedPage) {\n                \n            } else if (this.currentTab.root === SearchPage) {\n                this.menu.enable(true, 'menu-search');\n            }\n        } else {\n            this.disableMenus();\n        }\n    }\n\n    /**\n     * @name disableMenus\n     * @description disable all the menus for all the tabs\n     */\n    private disableMenus() {\n        this.menu.enable(false, 'menu-search');\n    }\n\n    /**\n     * @name change\n     * @description capture the change event for the ion-tab component\n     * @param {Tab} tab the selected tab\n     */\n    change(tab: Tab) {\n        this.currentTab = tab;\n        this.disableMenus();\n        this.enableMenus();\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/main.component.ts","import { Component } from '@angular/core';\nimport { Composition } from '../../../player/composition';\nimport { MidiPlayer } from '../../../player/midiplayer';\nimport { MP3Player } from '../../../player/mp3player';\nimport { PlayerService } from '../../../player/player.service';\nimport { DAO } from '../../../dao/dao';\nimport { LoadingController, PopoverController } from 'ionic-angular';\nimport { TrainerPage } from '../../trainer/trainer.component';\nimport { App } from 'ionic-angular';\nimport { SortPage } from '../sort/sort.component';\n\n@Component({\n    templateUrl: './recent.component.html',\n    providers: [MidiPlayer, PlayerService, MP3Player]\n})\nexport class RecentPage {\n\n    private compositions: Composition[] = [];\n    private filteredComp: Composition[] = [];\n    private lastCompositionsSearch: string = \"\";\n    private sortby: string = SortPage.SORT_BY_NAME;\n\n    constructor(private app: App,\n        private midiPlayer: MidiPlayer,\n        private mp3Player: MP3Player,\n        public popoverCtrl: PopoverController,\n        private dao: DAO, private loadingCtrl: LoadingController) {\n    }\n\n    public enableMenus() {\n    }\n\n    public disableMenus() {\n    }\n\n    ionViewDidEnter() {\n        this.loadCompositions();\n    }\n\n    onSortPopup(myEvent) {\n        let popover = this.popoverCtrl.create(SortPage, { data: this.sortby });\n        popover.present({\n            ev: myEvent\n        }).then((value) => {\n            //nothing\n        });\n\n        popover.onWillDismiss((data) => {\n            this.sortby = data;\n            this.filterCompositions(this.lastCompositionsSearch);\n        });\n    }\n\n    /**\n     * @name loadCompositions\n     * @description load the compositions downloaded\n     * @return the promise to load them\n     */\n    private loadCompositions(): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.dao.getRecents().then((compositions) => {\n                this.compositions = compositions;\n                this.filteredComp = this.compositions;\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * @name stopMidi\n     * @description stop the currently midi being played\n     */\n    stopMidi(index: number) {\n        let comp = this.filteredComp[index];\n        comp.flagPlaying = false;\n        this.mp3Player.stop();\n        this.mp3Player.reset();\n        this.midiPlayer.stop();\n    }\n\n    /**\n     * @name playMidi\n     * @description play the midi file linked with the composition\n     * @param <number> index the index to be played\n     */\n    playMidi(index: number) {\n        let comp = this.filteredComp[index];\n\n        this.mp3Player.stop();\n        this.mp3Player.reset();\n        this.midiPlayer.stop();\n        comp.flagPlaying = true;\n\n        if (comp.mp3URL && comp.mp3URL.length > 0) {\n            let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.mp3URL;\n            this.mp3Player.init(url).then(() => {\n                this.midiPlayer.load(comp).then(() => {\n                    this.mp3Player.play();\n                    this.midiPlayer.play();\n                });\n            });\n        } else {\n            this.midiPlayer.load(comp).then(() => {\n                this.midiPlayer.play();\n            });\n        }\n    }\n\n    removeComposition(index: number) {\n        let loader = this.loadingCtrl.create({\n            content: \"Please wait while removing...\"\n        });\n        loader.present();\n\n        let comp = this.filteredComp[index];\n        this.dao.removeRecent(comp.id).then(() => {\n            this.loadCompositions().then(() => {\n                loader.dismiss();\n            });\n        });\n    }\n\n    /**\n     * @name trainComposition\n     * @description train the selected composition\n     * @param {number} index the index of the composition selected\n     */\n    trainComposition(index: number) {\n        let comp = this.filteredComp[index];\n        this.app.getRootNav().push(TrainerPage, comp);\n    }\n\n    /**\n     * @name sortCompositions\n     * @description sort the compositions by name, author, level and instrument\n     */\n    sortCompositions() {\n        this.filteredComp = SortPage.sort(this.sortby, this.filteredComp);\n    }\n\n    /**\n     * @name searchCompositions\n     * @description filter the compositions by a value\n     * @param <string> val the value to filter\n     */\n    filterCompositions(val: string) {\n        this.lastCompositionsSearch = val;\n\n        //before continue, sorting the compositions properly\n        this.sortCompositions();\n\n        // if the value is an empty string don't filter the items\n        if (val && val.trim() != '') {\n            val = val.toLowerCase();\n            this.filteredComp = this.compositions.filter((item: Composition) => {\n                return (item.author.toLowerCase().indexOf(val) > -1) ||\n                    (item.name.toLowerCase().indexOf(val) > -1) ||\n                    (item.frontInstrument.name.toLowerCase().indexOf(val) > -1);\n            })\n        } else {\n            this.filteredComp = this.compositions;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/recent/recent.component.ts","\nexport function extend<T, U>(first: T, second: U): T & U {\n    let result = <T & U>{};\n    for (let id in first) {\n        (<any>result)[id] = (<any>first)[id];\n    }\n    for (let id in second) {\n        if (!result.hasOwnProperty(id)) {\n            (<any>result)[id] = (<any>second)[id];\n        }\n    }\n    return result;\n}\n\nexport function inArray(elem, array, i?: number) {\n    var len;\n    if (array) {\n        if (array.indexOf) {\n            return array.indexOf.call(array, elem, i);\n        }\n        len = array.length;\n        i = i ? i < 0 ? Math.max(0, len + i) : i : 0;\n        for (; i < len; i++) {\n            // Skip accessing in sparse arrays\n            if (i in array && array[i] === elem) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\n/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nexport function encode(arraybuffer): string {\n    var bytes = new Uint8Array(arraybuffer),\n        i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n        base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n}\nexport function decode(base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length, i, p = 0,\n        encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") {\n            bufferLength--;\n        }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = chars.indexOf(base64[i]);\n        encoded2 = chars.indexOf(base64[i + 1]);\n        encoded3 = chars.indexOf(base64[i + 2]);\n        encoded4 = chars.indexOf(base64[i + 3]);\n\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/Util.ts","/**\n * Contains misc static utility methods.\n */\nexport class Utils {\n\n\t/**\n\t * Converts a single byte to a hex string.\n\t * @param {number} byte\n\t * @return {string}\n\t */\n\tstatic byteToHex(byte) {\n\t\t// Ensure hex string always has two chars\n\t\treturn ('0' + byte.toString(16)).slice(-2);\n\t}\n\n\t/**\n\t * Converts an array of bytes to a hex string.\n\t * @param {array} byteArray\n\t * @return {string}\n\t */\n\tstatic bytesToHex(byteArray) {\n\t\tvar hex = [];\n\t\tbyteArray.forEach(byte => hex.push(Utils.byteToHex(byte)));\n\t\treturn hex.join('');\n\t}\n\n\t/**\n\t * Converts a hex string to a number.\n\t * @param {string} hexString\n\t * @return {number}\n\t */\n\tstatic hexToNumber(hexString) {\n\t\treturn parseInt(hexString, 16);\n\t}\n\n\t/**\n\t * Converts an array of bytes to a number.\n\t * @param {array} byteArray\n\t * @return {number}\n\t */\n\tstatic bytesToNumber(byteArray) {\n\t\treturn Utils.hexToNumber(Utils.bytesToHex(byteArray));\n\t}\n\n\t/**\n\t * Converts an array of bytes to letters.\n\t * @param {array} byteArray\n\t * @return {string}\n\t */\n\tstatic bytesToLetters(byteArray) {\n\t\tvar letters = [];\n\t\tbyteArray.forEach(byte => letters.push(String.fromCharCode(byte)));\n\t\treturn letters.join('');\n\t}\n\n\t/**\n\t * Converts a decimal to it's binary representation.\n\t * @param {number} dec\n\t * @return {string}\n\t */\n\tstatic decToBinary(dec) {\n\t\treturn (dec >>> 0).toString(2);\n\t}\n\n\t/**\n\t * Reads a variable length value.\n\t * @param {array} byteArray\n\t * @return {number}\n\t */\n\tstatic readVarInt(byteArray) {\n\t\tvar result = 0;\n\t\tbyteArray.forEach(number => {\n\t\t\tvar b = number;\n\t\t\tif (b & 0x80) {\n\t\t\t\tresult += (b & 0x7f);\n\t\t\t\tresult <<= 7;\n\t\t\t} else {\n\t\t\t\t/* b is the last byte */\n\t\t\t\tresult += b;\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Decodes base-64 encoded string \n\t * @param {string} string\n\t * @return {string}\n\t */\n\tstatic atob(string) {\n\t\tif (typeof atob === 'function') return atob(string);\n\t\tconsole.log(\"no atob\");\n\t\t//return new Buffer(string, 'base64').toString('binary');\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/player/midiplayerjs/utils.ts","export class Settings {\n    public filterSettings: FilterSettings = new FilterSettings();\n    public playerSettings: PlayerSettings = new PlayerSettings();\n}\n\nexport class FilterSettings {\n    //instrumentos melódicos\n    public flute: boolean = true;\n    public clarinet: boolean = true;\n    public record: boolean = true;\n    public trumpet: boolean = true;\n    public saxophone: boolean = true;\n}\n\nexport class PlayerSettings {\n    /**\n     * indicates if we want to show a cursor during the playing\n     */\n    public cursor: boolean = true;\n    /**\n     * if the cursor should move with animation or not. (animation needs optimal render from the navigator)\n     */\n    public cursorAnimation: boolean = false;\n\n    /**\n     * inciates if we want to hear the backing track\n     */\n    public playBack: boolean = true;\n\n    /**\n     * indicates if the soloist voice should be played during the training or not\n     */\n    public playSoloist: boolean = false;\n\n    /**\n     * Indicates if we need a double preparation before starting playing the music\n     */\n    public doublePreparation: boolean = true;\n\n    /**\n     * indicates if we want to play the metronome\n     */\n    public metronome: boolean = false;\n\n    /**\n     * settings to indicate that we want the high quality instruments\n     */\n    public highQuality:boolean = false;\n\n    /**\n     * the bluetooth delay to sync visual and sound\n     */\n    public bluetoothDelay:number = 0;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dao/settings.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Request, RequestOptions, RequestOptionsArgs, RequestMethod, ResponseContentType } from '@angular/http';\nimport { encode, decode } from '../util/Util';\nimport { Composition } from './composition';\n\n@Injectable()\nexport class PlayerService {\n    public static dataUrl1 = 'https://raw.githubusercontent.com/spheras/backingtrainer/compositions';\n    //public static dataUrl1 = 'assets/data';\n\n    constructor(private http: Http) { }\n\n    public getSoundfont(): Promise<ArrayBuffer> {\n        return new Promise<ArrayBuffer>((resolve) => {\n            let url = 'assets/soundfonts/FluidR3 GM2-2.sf2';\n            var basicOptions: RequestOptionsArgs = {\n                url: url,\n                method: RequestMethod.Get,\n                search: null,\n                headers: null,\n                body: null,\n                withCredentials: false,\n                responseType: ResponseContentType.ArrayBuffer\n            };\n            var reqOptions = new RequestOptions(basicOptions);\n            var req = new Request(reqOptions);\n            this.http.request(req)\n                .map((r: Response) => {\n                    return r.arrayBuffer();\n                })\n                .catch((error) => {\n                    console.error(error);\n                    throw error;\n                }).subscribe((response: ArrayBuffer) => {\n                    resolve(response);\n                });\n        });\n    }\n\n    /**\n     * @name getMP3\n     * @description return the mp3 enconded in b64\n     * @param {string} url the url to load\n     * @return {Promise<String>} the promise to load the mp3\n     */\n    public getMP3(url: string): Promise<string> {\n        return new Promise<string>((resolve) => {\n            var basicOptions: RequestOptionsArgs = {\n                url: url,\n                method: RequestMethod.Get,\n                search: null,\n                headers: null,\n                body: null,\n                withCredentials: false,\n                responseType: ResponseContentType.ArrayBuffer\n            };\n            var reqOptions = new RequestOptions(basicOptions);\n            var req = new Request(reqOptions);\n            this.http.request(req)\n                .map((r: Response) => {\n                    return r.arrayBuffer();\n                })\n                .catch((error) => {\n                    console.error(error);\n                    throw error;\n                }).subscribe((response: ArrayBuffer) => {\n                    resolve(encode(response));\n                });\n        });\n    }\n\n\n    /**\n     * @name getScore\n     * @description return the score xml string corresponding to the composition. It can be retrieved directly from memory or downloading from server.\n     * @param {Composition} comp the composition info to obtain the score xml data\n     * @return Promise to get the String\n     */\n    public getScore(comp: Composition): Promise<string> {\n        return new Promise<string>((resolve) => {\n            if (comp.scoreXMLData != null) {\n                resolve(comp.scoreXMLData);\n            } else {\n                let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.scoreURL;\n                this.http\n                    .get(url)\n                    .map((r: Response) => {\n                        return r.text();\n                    })\n                    .catch((error) => {\n                        console.error(error);\n                        throw error;\n                    }).subscribe((data: string) => {\n                        resolve(data);\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name getMidi\n     * @description return the midi ArrayBuffer data corresponding to the composition param. It can be retrieved directly from memory or downloading from server.\n     * @param {Composition} comp the composition info to obtain the midi arraybuffer data\n     * @return the promise to obtain the arraybuffer\n     */\n    public getMidi(comp: Composition): Promise<ArrayBuffer> {\n        return new Promise<ArrayBuffer>((resolve) => {\n            if (comp.midiB64Data != null) {\n                let buffer: ArrayBuffer = decode(comp.midiB64Data);\n                resolve(buffer);\n            } else {\n                let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.midiURL;\n                var basicOptions: RequestOptionsArgs = {\n                    url: url,\n                    method: RequestMethod.Get,\n                    search: null,\n                    headers: null,\n                    body: null,\n                    withCredentials: false,\n                    responseType: ResponseContentType.ArrayBuffer\n                };\n                var reqOptions = new RequestOptions(basicOptions);\n                var req = new Request(reqOptions);\n                this.http.request(req)\n                    .map((r: Response) => {\n                        return r.arrayBuffer();\n                    })\n                    .catch((error) => {\n                        console.error(error);\n                        throw error;\n                    }).subscribe((response: ArrayBuffer) => {\n                        resolve(response);\n                    });\n            }\n        });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player/player.service.ts","import { Component } from '@angular/core';\nimport { Composition } from '../../../player/composition';\nimport { MidiPlayer } from '../../../player/midiplayer';\nimport { MP3Player } from '../../../player/mp3player';\nimport { PlayerService } from '../../../player/player.service';\nimport { DAO } from '../../../dao/dao';\nimport { LoadingController, PopoverController } from 'ionic-angular';\nimport { TrainerPage } from '../../trainer/trainer.component';\nimport { App } from 'ionic-angular';\nimport { SortPage } from '../sort/sort.component';\n\n@Component({\n    templateUrl: './downloaded.component.html',\n    providers: [MidiPlayer, PlayerService, MP3Player]\n})\nexport class DownloadedPage {\n\n    private compositions: Composition[] = [];\n    private filteredComp: Composition[] = [];\n    private lastCompositionsSearch: string = \"\";\n    private sortby: string = SortPage.SORT_BY_NAME;\n\n    constructor(private app: App, private midiPlayer: MidiPlayer, private mp3Player: MP3Player,\n        private dao: DAO, private loadingCtrl: LoadingController, public popoverCtrl: PopoverController, ) {\n    }\n\n    public enableMenus() {\n    }\n\n    public disableMenus() {\n    }\n\n    ionViewDidEnter() {\n        this.loadCompositions();\n    }\n\n    /**\n     * @name loadCompositions\n     * @description load the compositions downloaded\n     * @return the promise to load them\n     */\n    private loadCompositions(): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.dao.getCompositions().then((compositions) => {\n                this.compositions = compositions;\n                this.filteredComp = this.compositions;\n                this.filterCompositions(this.lastCompositionsSearch);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * @name stopMidi\n     * @description stop the currently midi being played\n     */\n    stopMidi(index: number) {\n        let comp = this.filteredComp[index];\n        comp.flagPlaying = false;\n        this.mp3Player.stop();\n        this.mp3Player.reset();\n        this.midiPlayer.stop();\n    }\n\n    /**\n     * @name playMidi\n     * @description play the midi file linked with the composition\n     * @param <number> index the index to be played\n     */\n    playMidi(index: number) {\n        let comp = this.filteredComp[index];\n\n        this.mp3Player.stop();\n        this.mp3Player.reset();\n        this.midiPlayer.stop();\n        comp.flagPlaying = true;\n\n        if (comp.mp3URL && comp.mp3URL.length > 0) {\n            let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.mp3URL;\n            this.mp3Player.init(url).then(() => {\n                this.midiPlayer.load(comp).then(() => {\n                    this.mp3Player.play();\n                    this.midiPlayer.play();\n                });\n            });\n        } else {\n            this.midiPlayer.load(comp).then(() => {\n                this.midiPlayer.play();\n            });\n        }\n    }\n\n    removeComposition(index: number) {\n        let loader = this.loadingCtrl.create({\n            content: \"Please wait while removing...\"\n        });\n        loader.present();\n\n        let comp = this.filteredComp[index];\n        this.dao.removeComposition(comp.id).then(() => {\n            this.loadCompositions().then(() => {\n                loader.dismiss();\n            });\n        });\n    }\n\n    /**\n     * @name trainComposition\n     * @description train the selected composition\n     * @param {number} index the index of the composition selected\n     */\n    trainComposition(index: number) {\n        let comp = this.filteredComp[index];\n        this.dao.addRecent(comp);\n        this.app.getRootNav().push(TrainerPage, comp);\n        //this.app.getRootNav().setRoot(TrainerPage, comp);\n        //this.modalCtrl.create(TrainerPage, comp).present();\n    }\n\n\n    onSortPopup(myEvent) {\n        let popover = this.popoverCtrl.create(SortPage, { data: this.sortby });\n        popover.present({\n            ev: myEvent\n        }).then((value) => {\n            //nothing\n        });\n\n        popover.onWillDismiss((data) => {\n            this.sortby = data;\n            this.filterCompositions(this.lastCompositionsSearch);\n        });\n    }\n\n    /**\n     * @name searchCompositions\n     * @description filter the compositions by a value\n     * @param <string> val the value to filter\n     */\n    filterCompositions(val: string) {\n        this.lastCompositionsSearch = val;\n        // if the value is an empty string don't filter the items\n        if (val && val.trim() != '') {\n            val = val.toLowerCase();\n            this.filteredComp = this.compositions.filter((item: Composition) => {\n                return (item.author.toLowerCase().indexOf(val) > -1) ||\n                    (item.name.toLowerCase().indexOf(val) > -1) ||\n                    (item.frontInstrument.name.toLowerCase().indexOf(val) > -1);\n            })\n        } else {\n            this.filteredComp = this.compositions;\n        }\n\n         //before continue, sorting the compositions properly\n         this.sortCompositions();\n    }\n\n    /**\n     * @name sortCompositions\n     * @description sort the compositions by name, author, level and instrument\n     */\n    sortCompositions() {\n        this.filteredComp = SortPage.sort(this.sortby, this.filteredComp);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/downloaded/downloaded.component.ts","import { Component } from '@angular/core';\nimport { SearchService } from './search.service';\nimport { Composition, Collection } from '../../../player/composition';\nimport { MidiPlayer } from '../../../player/midiplayer';\nimport { MP3Player } from '../../../player/mp3player';\nimport { PlayerService } from '../../../player/player.service';\nimport { DAO } from '../../../dao/dao';\nimport { LoadingController, AlertController } from 'ionic-angular';\nimport { TrainerPage } from '../../trainer/trainer.component';\nimport { App } from 'ionic-angular';\nimport { Subscription } from 'rxjs/Rx';\nimport { Settings } from '../../../dao/settings';\nimport { PopoverController } from 'ionic-angular';\nimport { SortPage } from '../sort/sort.component';\n\n@Component({\n    templateUrl: './search.component.html',\n    providers: [SearchService, MidiPlayer, PlayerService, MP3Player]\n})\nexport class SearchPage {\n\n    type: string = \"compositions\";\n\n    private compositions: Composition[] = [];\n    private filteredComp: Composition[] = [];\n    private collections: Collection[] = [];\n    private filteredCollections: Collection[] = [];\n    private daoSubscription: Subscription = null;\n    private settings: Settings;\n    private lastCompositionsSearch: string = \"\";\n    private sortby: string = SortPage.SORT_BY_NAME;\n\n    constructor(private app: App, public alertCtrl: AlertController, private service: SearchService,\n        private midiPlayer: MidiPlayer, private mp3Player: MP3Player, private dao: DAO,\n        public popoverCtrl: PopoverController,\n        private loadingCtrl: LoadingController) {\n\n        this.dao.getSettings().then((settings) => {\n            this.settings = settings;\n        });\n        this.daoSubscription = this.dao.observeSettings().subscribe((settings) => {\n            this.settings = settings;\n            this.filterCompositions(this.lastCompositionsSearch);\n        });\n\n        //first we get the compositions\n        this.service.getServerCompositionIndex().subscribe((compositions) => {\n            this.compositions = compositions;\n            this.filteredComp = this.compositions;\n            this.dao.getSettings().then((settings) => {\n                this.settings = settings;\n                this.filterCompositions(\"\");\n                this.checkDownloaded();\n            });\n        });\n\n        //second we get the collections\n        this.service.getServerCollectionIndex().subscribe((collections) => {\n            this.collections = collections;\n            this.filteredCollections = this.collections;\n            this.dao.getSettings().then((settings) => {\n                this.settings = settings;\n                this.filterCompositions(\"\");\n                this.checkDownloaded();\n            });\n        });\n\n\n    }\n\n    ionViewDidLeave() {\n        //settings unsubscription\n        if (this.daoSubscription != null) {\n            this.daoSubscription.unsubscribe();\n        }\n    }\n\n\n    /**\n     * @name checkDownloaded\n     * @description check the flag downloaded for those compositions already downloaded\n     */\n    private checkDownloaded() {\n        this.dao.getCompositions().then((downloaded) => {\n            for (let i = 0; i < downloaded.length; i++) {\n                for (let j = 0; j < this.compositions.length; j++) {\n                    if (downloaded[i].id == this.compositions[j].id) {\n                        this.compositions[j].flagDownloaded = true;\n                    }\n                }\n            }\n        })\n    }\n\n    /**\n      * @name trainComposition\n      * @description train the selected composition\n     * @param {number} indexComposition the index of the composition to be trained\n     * @param {number} indexCollection (optional) the index of the collection to be trained\n      */\n    trainComposition(indexComposition: number, indexCollection?: number) {\n        let comp = null;\n        if (indexCollection) {\n            let coll = this.filteredCollections[indexCollection];\n            comp = coll.compositions[indexComposition];\n        } else {\n            comp = this.filteredComp[indexComposition];\n        }\n\n        this.dao.addRecent(comp);\n        this.app.getRootNav().push(TrainerPage, comp, null, function () {\n            //console.log('done');\n        });\n        //this.app.getRootNav().setRoot(TrainerPage, comp);\n        //this.modalCtrl.create(TrainerPage, comp).present();\n    }\n\n    /**\n     * @name downloadComposition\n     * @description download an existing composition\n     * @param {number} indexComposition the index of the composition to be downloaded\n     * @param {number} indexCollection (optional) the index of the collection to be downloaded\n     */\n    downloadComposition(indexComposition: number, indexCollection?: number) {\n        let comp = null;\n        if (indexCollection) {\n            let coll = this.filteredCollections[indexCollection];\n            comp = coll.compositions[indexComposition];\n        } else {\n            comp = this.filteredComp[indexComposition];\n        }\n\n        let loader = this.loadingCtrl.create({\n            content: \"Please wait while downloading...\"\n        });\n        loader.present();\n        let midiPromise = this.service.downloadMidiB64(comp);\n        let scorePromise = this.service.downloadScore(comp);\n\n        midiPromise.subscribe((midib64: string) => {\n            comp.midiB64Data = midib64;\n            scorePromise.subscribe((scorexml: string) => {\n                comp.scoreXMLData = scorexml;\n                this.dao.saveComposition(comp).then(() => {\n                    comp.flagDownloaded = true;\n                    loader.dismiss();\n                });\n            }, error => {\n                loader.dismiss();\n                let alert = this.alertCtrl.create({\n                    title: 'Error!',\n                    subTitle: 'Error downloading the score from the Server!',\n                    buttons: ['OK']\n                });\n                alert.present();\n            });\n        }, error => {\n            loader.dismiss();\n            let alert = this.alertCtrl.create({\n                title: 'Error!',\n                subTitle: 'Error downloading the midi from the Server!',\n                buttons: ['OK']\n            });\n            alert.present();\n        });\n    }\n\n    /**\n     * @name stopMidi\n     * @description stop the currently midi being played\n     * @param {number} indexComposition the index of the composition to be stopped\n     * @param {number} indexCollection (optional) the index of the collection to be stopped\n     */\n    stopMidi(indexComposition: number, indexCollection?: number) {\n        let comp = null;\n        if (indexCollection) {\n            let coll = this.filteredCollections[indexCollection];\n            comp = coll.compositions[indexComposition];\n        } else {\n            comp = this.filteredComp[indexComposition];\n        }\n        comp.flagPlaying = false;\n        this.mp3Player.stop();\n        this.mp3Player.reset();\n        this.midiPlayer.stop();\n    }\n\n    onSortPopup(myEvent) {\n        let popover = this.popoverCtrl.create(SortPage, { data: this.sortby });\n        popover.present({\n            ev: myEvent\n        }).then((value) => {\n            //nothing\n        });\n\n        popover.onWillDismiss((data) => {\n            this.sortby = data;\n            this.filterCompositions(this.lastCompositionsSearch);\n        });\n    }\n\n    /**\n     * @name playMidi\n     * @description play the midi file linked with the composition\n     * @param {number} indexComposition the index of the composition to be played\n     * @param {number} indexCollection (optional) the index of the collection to be played\n     */\n    playMidi(indexComposition: number, indexCollection?: number) {\n        let comp = null;\n        if (indexCollection) {\n            let coll = this.filteredCollections[indexCollection];\n            comp = coll.compositions[indexComposition];\n        } else {\n            comp = this.filteredComp[indexComposition];\n        }\n        this.mp3Player.stop();\n        this.mp3Player.reset();\n        this.midiPlayer.stop();\n        comp.flagPlaying = true;\n\n        if (comp.mp3URL && comp.mp3URL.length > 0) {\n            let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.mp3URL;\n            this.mp3Player.init(url).then(() => {\n                this.midiPlayer.load(comp).then(() => {\n                    this.mp3Player.play();\n                    this.midiPlayer.play();\n                });\n            });\n        } else {\n            this.midiPlayer.load(comp).then(() => {\n                this.midiPlayer.play();\n            });\n        }\n    }\n\n    /**\n     * @name searchCompositions\n     * @description filter the compositions by a value\n     * @param {string} val the value to filter\n     */\n    filterCompositions(val: string) {\n        this.lastCompositionsSearch = val;\n        // if the value is an empty string don't filter the items\n        val = val.toLowerCase();\n        this.filteredComp = this.compositions.filter((item: Composition) => {\n            if (!this.isValidInstrument(item.frontInstrument.name)) {\n                return false;\n            }\n            if (val && val.trim().length > 0) {\n                return (item.author.toLowerCase().indexOf(val) > -1) ||\n                    (item.name.toLowerCase().indexOf(val) > -1) ||\n                    (item.frontInstrument.name.toLowerCase().indexOf(val) > -1);\n            } else {\n                return true;\n            }\n        })\n\n        //before continue, sorting the compositions properly\n        this.sortCompositions();\n\n        // if the value is an empty string don't filter the items\n        if (val && val.trim() != '') {\n            val = val.toLowerCase();\n            this.filteredCollections = this.collections.filter((item: Collection) => {\n                if (!this.isValidInstrument(item.instrument)) {\n                    return false;\n                }\n                return (item.author.toLowerCase().indexOf(val) > -1) ||\n                    (item.name.toLowerCase().indexOf(val) > -1) ||\n                    (item.instrument.toLowerCase().indexOf(val) > -1);\n            })\n        } else {\n            this.filteredCollections = this.collections;\n        }\n    }\n\n    /**\n     * @name isValidInstrument\n     * @description check if a certain instrument is valid in terms of is can be showed or not\n     * @param {string} name the name of the instrument\n     * @return {boolean} true if it can be showed\n     */\n    private isValidInstrument(name: string): boolean {\n        name = name.toLowerCase();\n        if (this.settings) {\n            if (this.settings.filterSettings) {\n                if (!this.settings.filterSettings.clarinet && name == \"clarinet\") {\n                    return false;\n                }\n                if (!this.settings.filterSettings.flute && name == \"flute\") {\n                    return false;\n                }\n                if (!this.settings.filterSettings.record && name == \"record\") {\n                    return false;\n                }\n                if (!this.settings.filterSettings.saxophone && name == \"saxophone\") {\n                    return false;\n                }\n                if (!this.settings.filterSettings.trumpet && name == \"trumpet\") {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @name sortCompositions\n     * @description sort the compositions by name, author, level and instrument\n     */\n    sortCompositions() {\n        this.filteredComp = SortPage.sort(this.sortby, this.filteredComp);\n    }\n\n    expandCollection(index: number) {\n        let col = this.filteredCollections[index];\n        col.flagExpanded = !col.flagExpanded;\n\n        if (col.flagExpanded && !col.compositions) {\n            col.compositions = [];\n            for (let i = 0; i < col.compositionIds.length; i++) {\n                let id = col.compositionIds[i];\n                for (let j = 0; j < this.compositions.length; j++) {\n                    if (id == this.compositions[j].id) {\n                        col.compositions.push(this.compositions[j]);\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/search/search.component.ts","import { Component } from '@angular/core';\nimport { ModalController } from 'ionic-angular';\nimport { CreditsPage } from '../../credits/credits.component';\nimport { DownloadsPage } from '../../downloads/downloads.component';\nimport { PlayerService } from '../../../player/player.service';\n\n@Component({\n    templateUrl: './info.component.html',\n    providers: [PlayerService]\n})\nexport class InfoPage {\n\n    constructor(private modalCtrl: ModalController, private service: PlayerService) {\n\n    }\n\n    /**\n     * @name showCredits\n     * @description show the credits of the application\n     */\n    showCredits() {\n        this.modalCtrl.create(CreditsPage).present();\n    }\n\n    /**\n     * @name showDownloads\n     * @description show the downloads of the application\n     */\n    showDownloads() {\n        this.modalCtrl.create(DownloadsPage).present();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/info/info.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './credits.component.html',\n})\nexport class CreditsPage {\n\n    constructor() {\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/credits/credits.component.ts","import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './downloads.component.html',\n})\nexport class DownloadsPage {\n\n    constructor() {\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/downloads/downloads.component.ts","import { Component, ApplicationRef } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { Navbar } from 'ionic-angular';\nimport { PitchDetect, PitchDetectData } from './pitchdetect';\n\n@Component({\n    templateUrl: './tuner.component.html',\n    providers: [Navbar]\n})\nexport class TunerPage {\n\n    private data: PitchDetectData = new PitchDetectData(0, \"\", \"\", 0);\n    private difference: SafeStyle;\n    private sensitivity: number = 0;\n    private pd: PitchDetect = null;\n\n    constructor(private _sanitizer: DomSanitizer, private appref: ApplicationRef) {\n        this.init();\n    }\n\n    init() {\n        this.pd = new PitchDetect();\n        this.sensitivity = 10 - (this.pd.sensitivity * 100);\n        this.pd.toggleLiveInput().subscribe(\n            value => {\n                //console.log(value.detune + \":\" + value.detuneAmount);\n                let diff = value.detuneAmount;\n                if (diff < 10) {\n                    diff = 0;\n                }\n                if (value.detune == \"flat\") {\n                    diff = -diff;\n                }\n                this.difference = this._sanitizer.bypassSecurityTrustStyle(\"rotate(\" + diff + \"deg )\");\n                this.data = value\n                this.appref.tick();\n            }, error => console.error(error),\n            () => console.log(\"fin\"));\n    }\n\n    ionViewWillLeave() {\n        if (this.pd.isLiveInput) {\n            this.pd.toggleLiveInput();\n        }\n        if (this.pd.isPlaying) {\n            this.pd.toggleOscillator();\n        }\n        this.pd.close();\n    }\n\n    /**\n     * @name listen\n     * @description start/stop playing the oscillator\n     */\n    listen() {\n        if (this.pd.isPlaying) {\n            this.pd.toggleOscillator();\n            this.pd.toggleLiveInput();\n            this.pd.close();\n            this.init();\n        } else {\n            this.pd.toggleOscillator();\n        }\n    }\n\n    /**\n     * @name change\n     * @description the range component has changed the value\n     * @param {Range} the event produced by the component with the new value\n     */\n    change(event) {\n        this.pd.sensitivity = (10 - event.value) / 100;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tuner/tuner.component.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport {enableProdMode} from '@angular/core';\nimport { AppModule } from './app.module';\n\n// this is the magic wand\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { MainPage } from '../pages/main/main.component';\nimport { SearchPage } from '../pages/main/search/search.component';\nimport { DownloadedPage } from '../pages/main/downloaded/downloaded.component';\nimport { RecentPage } from '../pages/main/recent/recent.component';\nimport { InfoPage } from '../pages/main/info/info.component';\nimport { TunerPage } from '../pages/tuner/tuner.component';\nimport { TrainerPage } from '../pages/trainer/trainer.component';\nimport { CreditsPage } from '../pages/credits/credits.component';\nimport { DownloadsPage } from '../pages/downloads/downloads.component';\nimport { TempoPage } from '../pages/tempo/tempo.component';\n\nimport { TranslateModule, TranslateLoader, TranslateStaticLoader } from 'ng2-translate/ng2-translate';\nimport { Http } from \"@angular/http\";\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { KnobModule } from 'ng2-knob';\nimport { SortPage } from '../pages/main/sort/sort.component';\n\n@NgModule({\n\n  declarations: [\n    MyApp,\n    MainPage,\n    TrainerPage,\n    TunerPage,\n    InfoPage,\n    CreditsPage,\n    DownloadsPage,\n    SearchPage, DownloadedPage, RecentPage,\n    TempoPage,\n    SortPage\n  ],\n\n  imports: [\n    KnobModule,\n    IonicModule.forRoot(MyApp),\n    BrowserModule,\n    IonicStorageModule.forRoot(),\n    TranslateModule.forRoot({\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [Http]\n    })\n  ],\n\n  bootstrap: [IonicApp],\n\n  entryComponents: [\n    MyApp,\n    MainPage,\n    TrainerPage,\n    InfoPage,\n    TunerPage,\n    CreditsPage,\n    DownloadsPage,\n    SearchPage, DownloadedPage, RecentPage,\n    TempoPage,\n    SortPage\n  ],\n\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: ErrorHandler, useClass: IonicErrorHandler }\n  ],\n\n})\n\nexport class AppModule { }\nexport function createTranslateLoader(http: Http) {\n  return new TranslateStaticLoader(http, 'assets/i18n', '.json');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\nimport { Nav, Platform, MenuController } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { TranslateService } from 'ng2-translate';\nimport { ModalController } from 'ionic-angular';\n\nimport { MainPage } from '../pages/main/main.component';\nimport { TunerPage } from '../pages/tuner/tuner.component';\nimport { DAO } from '../dao/dao';\nimport { Settings, FilterSettings } from '../dao/settings';\n\n@Component({\n  templateUrl: 'app.component.html',\n  providers: [DAO]\n})\n\n/**\n * @class\n * @name MyApp\n * @description Application Class to start everything\n */\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  settings: Settings = new Settings();\n\n  /**\n   * To set the root page\n   */\n  rootPage: any = MainPage;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, private menuCtrl: MenuController,\n    private translate: TranslateService, private dao: DAO, private modalCtrl: ModalController) {\n    // this language will be used as a fallback when a translation isn't found in the current language\n    this.initializeApp();\n  }\n\n\n\n  /**\n   * @name initializeApp\n   * @description initialize the application\n   */\n  private initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n\n    this.dao.getSettings().then((settings) => {\n      if (!settings.filterSettings) {\n        settings.filterSettings = new FilterSettings();\n      }\n      this.settings = settings;\n      this.dao.observeSettings().subscribe((settings) => {\n        this.settings = settings;\n      });\n    });\n    this.initializeLocale();\n  }\n\n  private initializeLocale() {\n    var userLang = navigator.language.split('-')[0]; // use navigator lang if available\n    this.translate.setDefaultLang('en');\n    this.translate.use(userLang);\n  }\n\n  /**\n   * @name settingAnimation\n   * @description set the animation cursor property\n   * @param {boolean} value the value to set\n   */\n  settingAnimation(value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.cursorAnimation = value;\n      settings.playerSettings.cursorAnimation = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n\n  /**\n   * @name settingCursor\n   * @description set the cursor property\n   * @param {boolean} value the value to set\n   */\n  settingCursor(value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.cursor = value;\n      settings.playerSettings.cursor = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n  /**\n   * @name settingPlaySoloist\n   * @description set the playSoloist property\n   * @param {boolean} value the value to set\n   */\n  settingPlaySoloist(value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.playSoloist = value;\n      settings.playerSettings.playSoloist = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n\n  /**\n   * @name settingPlayBack\n   * @description set the playBack property\n   * @param {boolean} value the value to set\n   */\n  settingPlayBack(value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.playBack = value;\n      settings.playerSettings.playBack = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n  /**\n   * @name tune\n   * @description show the tune page\n   */\n  tune() {\n    this.menuCtrl.close();\n    this.modalCtrl.create(TunerPage).present();\n  }\n\n  /**\n   * @name settingDoublePreparation\n   * @description set the double preparation property\n   * @param {boolean} value the value to set\n   */\n  settingDoublePreparation(value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.doublePreparation = value;\n      settings.playerSettings.doublePreparation = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n  /**\n   * @name settingMetronome\n   * @description set the metrnome property\n   * @param {boolean} value the value to set\n   */\n  settingMetronome(value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.metronome = value;\n      settings.playerSettings.metronome = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n  /**\n   * @name settingInstrumentFilter\n   * @description set the instrument filter\n   * @param {string} instrument the instrument name (translated to a field for the setting object)\n   * @param {boolean} value the value to filter or not the instrument\n   */\n  settingInstrumentFilter(instrument: string, value: boolean) {\n    this.dao.getSettings().then((settings) => {\n      if (!settings.filterSettings) {\n        settings.filterSettings = new FilterSettings();\n      }\n\n      settings.filterSettings[instrument] = value;\n      this.settings.filterSettings = settings.filterSettings;\n      this.dao.setSettings(settings);\n    });\n  }\n\n  /**\n   * @name settingHighQuality\n   * @description set/unset the quality for sounds\n   * @param {boolean} value the value to set\n   */\n  settingHighQuality(value:boolean){\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.highQuality = value;\n      settings.playerSettings.highQuality = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n  /**\n   * @name settingBluetoothDelay\n   * @description set/unset the bluetooth delay\n   * @param {number} value the value to set\n   */\n  settingBluetoothDelay(value:number){\n    this.dao.getSettings().then((settings) => {\n      this.settings.playerSettings.bluetoothDelay = value;\n      settings.playerSettings.bluetoothDelay = value;\n      this.dao.setSettings(settings);\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Utils } from './utils';\nimport { Track } from './track';\n\n/**\n * Main player class.  Contains methods to load files, start, stop.\n * @param {function} - Callback to fire for each MIDI event.  Can also be added with on('midiEvent', fn)\n * @param {array} - Array buffer of MIDI file (optional).\n */\nexport class Player {\n\tprivate sampleRate: number = 5; // milliseconds\n\tprivate startTime: number = 0;\n\tprivate buffer = null;\n\tpublic division;\n\tprivate format;\n\tprivate setIntervalId = null;\n\tpublic tracks = [];\n\tpublic tempo: number = 120;\n\tprivate forcedTempo: number = -1;\n\tprivate originalTempo: number = -1;\n\tpublic startTick: number = 0;\n\tprivate tick = 0;\n\tprivate inLoop = false;\n\tpublic totalTicks = 0;\n\tpublic eventListeners = {};\n\n\tconstructor(eventHandler, buffer?) {\n\t\tthis.sampleRate = 5; // milliseconds\n\t\tthis.startTime = 0;\n\t\tthis.buffer = buffer || null;\n\t\tthis.division;\n\t\tthis.format;\n\t\tthis.setIntervalId = null;\n\t\tthis.tracks = [];\n\t\tthis.tempo = 120;\n\t\tthis.startTick = 0;\n\t\tthis.tick = 0;\n\t\tthis.inLoop = false;\n\t\tthis.totalTicks = 0;\n\t\tthis.eventListeners = {};\n\n\t\tif (typeof (eventHandler) === 'function') this.on('midiEvent', eventHandler);\n\t}\n\n\n\t/**\n\t * Load an array buffer into the player.\n\t * @param {array} arrayBuffer - Array buffer of file to be loaded.\n\t * @return {Player}\n\t */\n\tpublic loadArrayBuffer(arrayBuffer) {\n\t\tthis.buffer = new Uint8Array(arrayBuffer);\n\t\treturn this.fileLoaded();\n\t}\n\n\t/**\n\t * Load a data URI into the player.\n\t * @param {string} dataUri - Data URI to be loaded.\n\t * @return {Player}\n\t */\n\tloadDataUri(dataUri) {\n\t\t// convert base64 to raw binary data held in a string.\n\t\t// doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n\t\tvar byteString = Utils.atob(dataUri.split(',')[1]);\n\n\t\t// write the bytes of the string to an ArrayBuffer\n\t\tvar ia = new Uint8Array(byteString.length);\n\t\tfor (var i = 0; i < byteString.length; i++) {\n\t\t\tia[i] = byteString.charCodeAt(i);\n\t\t}\n\n\t\tthis.buffer = ia;\n\t\treturn this.fileLoaded();\n\t}\n\n\t/**\n\t * Get filesize of loaded file in number of bytes.\n\t * @return {number} - The filesize.\n\t */\n\tgetFilesize() {\n\t\treturn this.buffer ? this.buffer.length : 0;\n\t}\n\n\t/**\n\t * Parses file for necessary information and does a dry run to calculate total length.\n\t * Populates this.events & this.totalTicks.\n\t * @return {Player}\n\t */\n\tfileLoaded() {\n\t\tif (!this.validate()) throw 'Invalid MIDI file; should start with MThd';\n\t\treturn this.getDivision().getFormat().getTracks().dryRun();\n\t}\n\n\t/**\n\t * Validates file using simple means - first four bytes should == MThd.\n\t * @return {boolean}\n\t */\n\tvalidate() {\n\t\treturn Utils.bytesToLetters(this.buffer.slice(0, 4)) === 'MThd';\n\t}\n\n\t/**\n\t * Gets MIDI file format for loaded file.\n\t * @return {Player}\n\t */\n\tgetFormat() {\n\t\t/*\n\t\tMIDI files come in 3 variations:\n\t\tFormat 0 which contain a single track\n\t\tFormat 1 which contain one or more simultaneous tracks\n\t\t(ie all tracks are to be played simultaneously).\n\t\tFormat 2 which contain one or more independant tracks\n\t\t(ie each track is to be played independantly of the others).\n\t\treturn Utils.bytesToNumber(this.buffer.slice(8, 10));\n\t\t*/\n\n\t\tthis.format = Utils.bytesToNumber(this.buffer.slice(8, 10));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Parses out tracks, places them in this.tracks and initializes this.pointers\n\t * @return {Player}\n\t */\n\tgetTracks() {\n\t\tthis.tracks = [];\n\t\tthis.buffer.forEach(function (byte, index) {\n\t\t\tif (Utils.bytesToLetters(this.buffer.slice(index, index + 4)) == 'MTrk') {\n\t\t\t\tlet trackLength = Utils.bytesToNumber(this.buffer.slice(index + 4, index + 8));\n\t\t\t\tlet newtrack: Track = new Track(this.tracks.length, this.buffer.slice(index + 8, index + 8 + trackLength));\n\t\t\t\t//patch, we force a tempo if needed\n\t\t\t\tnewtrack.forcedTempo = this.forcedTempo;\n\t\t\t\tthis.tracks.push(newtrack);\n\n\t\t\t}\n\t\t}, this);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Force a tempo for all the played midi\n\t * @param {number} bpm the forced tempo\n\t */\n\tsetForcedTempo(bpm: number) {\n\t\tthis.tempo = bpm;\n\t\tthis.forcedTempo = bpm;\n\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\tthis.tracks[i].forcedTempo = bpm;\n\t\t}\n\t}\n\n\t/**\n\t * Save the original tempo for this song\n\t * @param {number} bpm the original tempo\n\t */\n\tsetOriginalTempo(bpm: number) {\n\t\tthis.originalTempo = bpm;\n\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\tthis.tracks[i].originalTempo = bpm;\n\t\t}\n\t}\n\n\t/**\n\t * Enables a track for playing.\n\t * @param {number} trackNumber - Track number\n\t * @return {Player}\n\t */\n\tenableTrack(trackNumber) {\n\t\tthis.tracks[trackNumber - 1].enable();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Disables a track for playing.\n\t * @param {number} - Track number\n\t * @return {Player}\n\t */\n\tdisableTrack(trackNumber) {\n\t\tthis.tracks[trackNumber - 1].disable();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets quarter note division of loaded MIDI file.\n\t * @return {Player}\n\t */\n\tgetDivision() {\n\t\tthis.division = Utils.bytesToNumber(this.buffer.slice(12, 14));\n\t\treturn this;\n\t}\n\n\t/**\n\t * The main play loop.\n\t * @param {boolean} - Indicates whether or not this is being called simply for parsing purposes.  Disregards timing if so.\n\t * @return {undefined}\n\t */\n\tplayLoop(dryRun) {\n\t\tif (!this.inLoop) {\n\t\t\tthis.inLoop = true;\n\t\t\tthis.tick = this.getCurrentTick();\n\t\t\t//console.log(\"tick:\"+this.tick);\n\n\t\t\tthis.tracks.forEach(function (track) {\n\t\t\t\t// Handle next event\n\t\t\t\tif (!dryRun && this.endOfFile()) {\n\t\t\t\t\tthis.triggerPlayerEvent('endOfFile');\n\t\t\t\t\tthis.stop();\n\n\t\t\t\t} else {\n\t\t\t\t\tlet event = track.handleEvent(this.tick, dryRun);\n\t\t\t\t\tif (event && !dryRun) {\n\t\t\t\t\t\tthis.emitEvent(event);\n\t\t\t\t\t} else if (event && dryRun && dryRun instanceof Function) {\n\t\t\t\t\t\tdryRun(event);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}, this);\n\n\t\t\tif (!dryRun) this.triggerPlayerEvent('playing', { tick: this.tick });\n\t\t\tthis.inLoop = false;\n\t\t}\n\t}\n\n\t/**\n\t * Setter for startTime.\n\t * @param {number} - UTC timestamp\n\t */\n\tsetStartTime(startTime) {\n\t\tthis.startTime = startTime;\n\t}\n\n\t/**\n\t * Start playing loaded MIDI file if not already playing.\n\t * @return {Player}\n\t */\n\tpublic play() {\n\t\tif (this.isPlaying()) throw 'Already playing...';\n\n\t\t// Initialize\n\t\tif (!this.startTime) this.startTime = (new Date()).getTime();\n\n\t\t// Start play loop\n\t\t//window.requestAnimationFrame(this.playLoop.bind(this));\n\t\tthis.setIntervalId = setInterval(this.playLoop.bind(this), this.sampleRate);\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Pauses playback if playing.\n\t * @return {Player}\n\t */\n\tpause() {\n\t\tclearInterval(this.setIntervalId);\n\t\tthis.setIntervalId = false;\n\t\tthis.startTick = this.tick;\n\t\tthis.startTime = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @name seek\n\t * @description seek the player\n\t * @param {number} tempo the original tempo of this track at the tick specified\n\t * @param {number} tick the tick to seek\n\t * @param {trackInfos[]} list of track info to restore the status\n\t */\n\tseek(tempo: number, tick: number, trackInfos: any[]) {\n\n\t\tthis.pause();\n\t\tlet diff = this.forcedTempo - this.originalTempo;\n\t\tlet newTempo = tempo + diff;\n\t\tthis.tempo = newTempo;\n\t\tthis.startTick = tick;\n\t\tthis.tick = tick;\n\t\tfor (let i = 0; i < trackInfos.length; i++) {\n\t\t\tdiff = this.tracks[i].forcedTempo - this.tracks[i].originalTempo;\n\t\t\tnewTempo = tempo + diff;\n\t\t\tthis.tracks[i].tempo = newTempo;\n\n\t\t\tthis.tracks[i].pointer = trackInfos[i].pointer;\n\t\t\tthis.tracks[i].lastStatus = trackInfos[i].lastStatus;\n\t\t\tthis.tracks[i].delta = trackInfos[i].delta;\n\t\t\tthis.tracks[i].runningDelta = trackInfos[i].runningDelta;\n\t\t\tthis.tracks[i].lastTick = trackInfos[i].lastTick;\n\t\t}\n\t}\n\n\t/**\n\t * @name prepare\n\t * @description prepare the midi to start playing the first note\n\t */\n\tprepare() {\n\t\tif (this.startTick == 0) {\n\t\t\tthis.playLoop(function (event) {\n\t\t\t\tif (event.name == \"Note on\") {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}\n\t}\n\n\t/**\n\t * Stops playback if playing.\n\t * @return {Player}\n\t */\n\tstop() {\n\t\tclearInterval(this.setIntervalId);\n\t\tthis.setIntervalId = false;\n\t\tthis.startTick = 0;\n\t\tthis.startTime = 0;\n\t\tthis.resetTracks();\n\t\treturn this;\n\t}\n\n\t/**\n\t * Checks if player is playing\n\t * @return {boolean}\n\t */\n\tisPlaying() {\n\t\treturn this.setIntervalId > 0;\n\t}\n\n\t/**\n\t * Plays the loaded MIDI file without regard for timing and saves events in this.events.  Essentially used as a parser.\n\t * @return {Player}\n\t */\n\tdryRun() {\n\t\t// Reset tracks first\n\t\tthis.resetTracks();\n\t\twhile (!this.endOfFile()) this.playLoop(true);\n\t\tthis.getEvents();\n\t\tthis.totalTicks = this.getTotalTicks();\n\t\tthis.startTick = 0;\n\t\tthis.startTime = 0;\n\n\t\t// Leave tracks in pristine condish\n\t\tthis.resetTracks();\n\t\t//console.log('Song time: ' + this.getSongTime() + ' seconds / ' + this.totalTicks + ' ticks.');\n\n\t\tthis.triggerPlayerEvent('fileLoaded', this);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Resets play pointers for all tracks.\n\t * @return {Player}\n\t */\n\tresetTracks() {\n\t\tthis.tracks.forEach(track => track.reset());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets an array of events grouped by track.\n\t * @return {array}\n\t */\n\tgetEvents() {\n\t\treturn this.tracks.map(track => track.events);\n\t}\n\n\t/**\n\t * Gets total number of ticks in the loaded MIDI file.\n\t * @return {number}\n\t */\n\tgetTotalTicks() {\n\t\treturn Math.max.apply(null, this.tracks.map(track => track.delta));\n\t}\n\n\t/**\n\t * Gets song duration in seconds.\n\t * @return {number}\n\t */\n\tgetSongTime() {\n\t\treturn this.totalTicks / this.division / this.tempo * 60;\n\t}\n\n\t/**\n\t * Gets remaining number of seconds in playback.\n\t * @return {number}\n\t */\n\tgetSongTimeRemaining() {\n\t\treturn Math.round((this.totalTicks - this.tick) / this.division / this.tempo * 60);\n\t}\n\n\t/**\n\t * Gets remaining percent of playback.\n\t * @return {number}\n\t */\n\tgetSongPercentRemaining() {\n\t\treturn Math.round(this.getSongTimeRemaining() / this.getSongTime() * 100);\n\t}\n\n\t/**\n\t * Number of bytes processed in the loaded MIDI file.\n\t * @return {number}\n\t */\n\tbytesProcessed() {\n\t\t// Currently assume header chunk is strictly 14 bytes\n\t\treturn 14 + this.tracks.length * 8 + this.tracks.reduce((a, b) => { return { pointer: a.pointer + b.pointer } }, { pointer: 0 }).pointer;\n\t}\n\n\t/**\n\t * Determines if the player pointer has reached the end of the loaded MIDI file.\n\t * @return {boolean}\n\t */\n\tendOfFile() {\n\t\treturn this.bytesProcessed() == this.buffer.length;\n\t}\n\n\t/**\n\t * Gets the current tick number in playback.\n\t * @return {number}\n\t */\n\tgetCurrentTick() {\n\t\treturn Math.round(((new Date()).getTime() - this.startTime) / 1000 * (this.division * (this.tempo / 60))) + this.startTick;\n\t}\n\n\t/**\n\t * Sends MIDI event out to listener.\n\t * @param {object}\n\t * @return {Player}\n\t */\n\temitEvent(event) {\n\t\t// Grab tempo if available.\n\t\tif (event.hasOwnProperty('name') && event.name === 'Set Tempo') {\n\t\t\tthis.tempo = event.data;\n\t\t}\n\t\tthis.triggerPlayerEvent('midiEvent', event);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Subscribes events to listeners \n\t * @param {string} - Name of event to subscribe to.\n\t * @param {function} - Callback to fire when event is broadcast.\n\t * @return {Player}\n\t */\n\ton(playerEvent, fn) {\n\t\tif (!this.eventListeners.hasOwnProperty(playerEvent)) this.eventListeners[playerEvent] = [];\n\t\tthis.eventListeners[playerEvent].push(fn);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Broadcasts event to trigger subscribed callbacks.\n\t * @param {string} - Name of event.\n\t * @param {object} - Data to be passed to subscriber callback.\n\t * @return {Player}\n\t */\n\ttriggerPlayerEvent(playerEvent, data) {\n\t\tif (this.eventListeners.hasOwnProperty(playerEvent)) this.eventListeners[playerEvent].forEach(fn => fn(data || {}));\n\t\treturn this;\n\t}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player/midiplayerjs/player.ts","import { Utils } from './utils';\nimport { Constants } from './constants';\n\n/**\n * Class representing a track.  Contains methods for parsing events and keeping track of pointer.\n */\nexport class Track {\n\n\tprivate enabled: boolean = true;\n\tprivate pointer: number = 0;\n\tprivate lastTick: number = 0;\n\tpublic lastStatus = null;\n\tprivate index;\n\tprivate data;\n\tprivate delta: number = 0;\n\tprivate runningDelta: number = 0;\n\tprivate events = [];\n\tprivate tempo;\n\tpublic forcedTempo: number = -1;\n\tpublic originalTempo: number = -1;\n\n\tconstructor(index, data) {\n\t\tthis.enabled = true;\n\t\tthis.pointer = 0;\n\t\tthis.lastTick = 0;\n\t\tthis.lastStatus = null;\n\t\tthis.index = index;\n\t\tthis.data = data;\n\t\tthis.delta = 0;\n\t\tthis.runningDelta = 0;\n\t\tthis.events = [];\n\t}\n\n\t/**\n\t * Resets all stateful track informaion used during playback.\n\t * @return {Track}\n\t */\n\treset() {\n\t\tthis.enabled = true;\n\t\tthis.pointer = 0;\n\t\tthis.lastTick = 0;\n\t\tthis.lastStatus = null;\n\t\tthis.delta = 0;\n\t\tthis.runningDelta = 0;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this track to be enabled during playback.\n\t * @return {Track}\n\t */\n\tenable() {\n\t\tthis.enabled = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this track to be disabled during playback.\n\t * @return {Track}\n\t */\n\tdisable() {\n\t\tthis.enabled = false;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets byte located at pointer position.\n\t * @return {number}\n\t */\n\tgetCurrentByte() {\n\t\treturn this.data[this.pointer];\n\t}\n\n\t/**\n\t * Gets count of delta bytes and current pointer position.\n\t * @return {number}\n\t */\n\tgetDeltaByteCount() {\n\t\t// Get byte count of delta VLV\n\t\t// http://www.ccarh.org/courses/253/handout/vlv/\n\t\t// If byte is greater or equal to 80h (128 decimal) then the next byte\n\t\t// is also part of the VLV,\n\t\t// else byte is the last byte in a VLV.\n\t\tvar currentByte = this.getCurrentByte();\n\t\tvar byteCount = 1;\n\n\t\twhile (currentByte >= 128) {\n\t\t\tcurrentByte = this.data[this.pointer + byteCount];\n\t\t\tbyteCount++;\n\t\t}\n\n\t\treturn byteCount;\n\t}\n\n\t/**\n\t * Get delta value at current pointer position.\n\t * @return {number}\n\t */\n\tgetDelta() {\n\t\treturn Utils.readVarInt(this.data.slice(this.pointer, this.pointer + this.getDeltaByteCount()));\n\t}\n\n\t/**\n\t * Handles event within a given track starting at specified index\n\t * @param {number} currentTick\n\t * @param {boolean} dryRun - If true events will be parsed and returned regardless of time.\n\t */\n\thandleEvent(currentTick, dryRun) {\n\t\tdryRun = dryRun || false;\n\t\tif (this.pointer < this.data.length && (dryRun || currentTick - this.lastTick >= this.getDelta())) {\n\t\t\tlet event = this.parseEvent();\n\t\t\t\n\t\t\t/*\t\t\t\n\t\t\tif (this.index > 0 && event.name == \"Note on\") {\n\t\t\t\tconsole.log(this.index + \" - new event[delta:\" + this.getDelta() + \";currentTick:\" + currentTick + \";lastTick:\" + this.lastTick + \"]\");\n\t\t\t}\n\t\t\t*/\n\t\t\tif (this.enabled) return event;\n\t\t\t// Recursively call this function for each event ahead that has 0 delta time?\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Get string data from event.\n\t * @param {number} eventStartIndex\n\t * @return {string}\n\t */\n\tgetStringData(eventStartIndex) {\n\t\t//var currentByte = this.pointer;\n\t\tvar byteCount = 1;\n\t\tvar length = Utils.readVarInt(this.data.slice(eventStartIndex + 2, eventStartIndex + 2 + byteCount));\n\t\t//var stringLength = length;\n\n\t\treturn Utils.bytesToLetters(this.data.slice(eventStartIndex + byteCount + 2, eventStartIndex + byteCount + length + 2));\n\t}\n\n\t/**\n\t * add a message to the event json\n\t * @param {any} the eventJson produced\n\t * @param {number} the number of messages to add\n\t */\n\tprivate addMessage(event: any, start: number, howmany: number) {\n\t\tfor (var i = 0; i < howmany; i++) {\n\t\t\tevent.message.push(this.data[start + i]);\n\t\t}\n\t}\n\n\t/**\n\t * Parses event into JSON and advances pointer for the track\n\t * @return {object}\n\t */\n\tparseEvent() {\n\t\tvar deltaByteCount = this.getDeltaByteCount();\n\t\tvar eventStartIndex = this.pointer + deltaByteCount;\n\t\tvar eventJson: any = {};\n\t\teventJson.track = this.index + 1;\n\t\teventJson.delta = this.getDelta();\n\t\teventJson.message = [];\n\t\tthis.lastTick = this.lastTick + eventJson.delta;\n\t\tthis.runningDelta += eventJson.delta;\n\t\teventJson.tick = this.runningDelta;\n\n\t\t//eventJson.raw = event;\n\t\tif (this.data[eventStartIndex] == 0xff) {\n\t\t\t// Meta Event\n\n\t\t\t// If this is a meta event we should emit the data and immediately move to the next event\n\t\t\t// otherwise if we let it run through the next cycle a slight delay will accumulate if multiple tracks\n\t\t\t// are being played simultaneously\n\n\t\t\tswitch (this.data[eventStartIndex + 1]) {\n\t\t\t\tcase 0x00: // Sequence Number\n\t\t\t\t\teventJson.name = 'Sequence Number';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x01: // Text Event\n\t\t\t\t\teventJson.name = 'Text Event';\n\t\t\t\t\teventJson.string = this.getStringData(eventStartIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x02: // Copyright Notice\n\t\t\t\t\teventJson.name = 'Copyright Notice';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x03: // Sequence/Track Name\n\t\t\t\t\teventJson.name = 'Sequence/Track Name';\n\t\t\t\t\teventJson.string = this.getStringData(eventStartIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x04: // Instrument Name\n\t\t\t\t\teventJson.name = 'Instrument Name';\n\t\t\t\t\teventJson.string = this.getStringData(eventStartIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x05: // Lyric\n\t\t\t\t\teventJson.name = 'Lyric';\n\t\t\t\t\teventJson.string = this.getStringData(eventStartIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x06: // Marker\n\t\t\t\t\teventJson.name = 'Marker';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x07: // Cue Point\n\t\t\t\t\teventJson.name = 'Cue Point';\n\t\t\t\t\teventJson.string = this.getStringData(eventStartIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x09: // Device Name\n\t\t\t\t\teventJson.name = 'Device Name';\n\t\t\t\t\teventJson.string = this.getStringData(eventStartIndex);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x20: // MIDI Channel Prefix\n\t\t\t\t\teventJson.name = 'MIDI Channel Prefix';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x21: // MIDI Port\n\t\t\t\t\teventJson.name = 'MIDI Port';\n\t\t\t\t\teventJson.data = Utils.bytesToNumber([this.data[eventStartIndex + 3]]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x2F: // End of Track\n\t\t\t\t\teventJson.name = 'End of Track';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x51: // Set Tempo\n\t\t\t\t\teventJson.name = 'Set Tempo';\n\t\t\t\t\teventJson.data = Math.round(60000000 / Utils.bytesToNumber(this.data.slice(eventStartIndex + 3, eventStartIndex + 6)));\n\t\t\t\t\tif (this.forcedTempo < 0) {\n\t\t\t\t\t\tthis.tempo = eventJson.data;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar diff = this.forcedTempo - this.originalTempo;\n\t\t\t\t\t\tvar newTempo=eventJson.data  + diff;\n\n\t\t\t\t\t\teventJson.data = newTempo;\n\t\t\t\t\t\tthis.tempo = newTempo;\n\t\t\t\t\t\t/*\n\t\t\t\t\t\teventJson.data = this.forcedTempo;\n\t\t\t\t\t\tthis.tempo = this.forcedTempo;\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\t//console.log(\"new tempo:\"+this.tempo);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x54: // SMTPE Offset\n\t\t\t\t\teventJson.name = 'SMTPE Offset';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x58: // Time Signature\n\t\t\t\t\teventJson.name = 'Time Signature';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x59: // Key Signature\n\t\t\t\t\teventJson.name = 'Key Signature';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0x7F: // Sequencer-Specific Meta-event\n\t\t\t\t\teventJson.name = 'Sequencer-Specific Meta-event';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\teventJson.name = 'Unknown: ' + this.data[eventStartIndex + 1].toString(16);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar length = this.data[this.pointer + deltaByteCount + 2];\n\t\t\t// Some meta events will have vlv that needs to be handled\n\n\t\t\tthis.addMessage(eventJson, eventStartIndex, 3);\n\t\t\tthis.pointer += deltaByteCount + 3 + length;\n\n\t\t} else if (this.data[eventStartIndex] == 0xf0) {\n\t\t\t// Sysex\n\t\t\teventJson.name = 'Sysex';\n\t\t\tvar length = this.data[this.pointer + deltaByteCount + 1];\n\t\t\tthis.addMessage(eventJson, eventStartIndex, 2 + length);\n\t\t\tthis.pointer += deltaByteCount + 2 + length;\n\t\t} else {\n\t\t\t// Voice event\n\t\t\tif (this.data[eventStartIndex] < 0x80) {\n\t\t\t\t// Running status\n\t\t\t\teventJson.running = true;\n\t\t\t\teventJson.noteNumber = this.data[eventStartIndex];\n\t\t\t\teventJson.noteName = Constants.NOTES[this.data[eventStartIndex]];\n\t\t\t\teventJson.velocity = this.data[eventStartIndex + 1];\n\n\t\t\t\tif (this.lastStatus <= 0x8f) {\n\t\t\t\t\teventJson.message.push(this.lastStatus);\n\t\t\t\t\teventJson.name = 'Note off';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0x80 + 1;\n\n\t\t\t\t} else if (this.lastStatus <= 0x9f) {\n\t\t\t\t\teventJson.message.push(this.lastStatus);\n\t\t\t\t\teventJson.name = 'Note on';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0x90 + 1;\n\t\t\t\t}\n\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 2);\n\t\t\t\tthis.pointer += deltaByteCount + 2;\n\n\t\t\t} else {\n\t\t\t\tthis.lastStatus = this.data[eventStartIndex];\n\n\t\t\t\tif (this.data[eventStartIndex] <= 0x8f) {\n\t\t\t\t\t// Note off\n\t\t\t\t\teventJson.name = 'Note off';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0x80 + 1;\n\t\t\t\t\teventJson.noteNumber = this.data[eventStartIndex + 1];\n\t\t\t\t\teventJson.noteName = Constants.NOTES[this.data[eventStartIndex + 1]];\n\t\t\t\t\teventJson.velocity = Math.round(this.data[eventStartIndex + 2] / 127 * 100);\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 3);\n\t\t\t\t\tthis.pointer += deltaByteCount + 3;\n\n\t\t\t\t} else if (this.data[eventStartIndex] <= 0x9f) {\n\t\t\t\t\t// Note on\n\t\t\t\t\teventJson.name = 'Note on';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0x90 + 1;\n\t\t\t\t\teventJson.noteNumber = this.data[eventStartIndex + 1];\n\t\t\t\t\teventJson.noteName = Constants.NOTES[this.data[eventStartIndex + 1]];\n\t\t\t\t\teventJson.velocity = Math.round(this.data[eventStartIndex + 2] / 127 * 100);\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 3);\n\t\t\t\t\tthis.pointer += deltaByteCount + 3;\n\n\t\t\t\t} else if (this.data[eventStartIndex] <= 0xaf) {\n\t\t\t\t\t// Polyphonic Key Pressure\n\t\t\t\t\teventJson.name = 'Polyphonic Key Pressure';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0xa0 + 1;\n\t\t\t\t\teventJson.note = Constants.NOTES[this.data[eventStartIndex + 1]];\n\t\t\t\t\teventJson.pressure = event[2];\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 3);\n\t\t\t\t\tthis.pointer += deltaByteCount + 3;\n\n\t\t\t\t} else if (this.data[eventStartIndex] <= 0xbf) {\n\t\t\t\t\t// Controller Change\n\t\t\t\t\teventJson.name = 'Controller Change';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0xb0 + 1;\n\t\t\t\t\teventJson.number = this.data[eventStartIndex + 1];\n\t\t\t\t\teventJson.value = this.data[eventStartIndex + 2];\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 3);\n\t\t\t\t\tthis.pointer += deltaByteCount + 3;\n\n\t\t\t\t} else if (this.data[eventStartIndex] <= 0xcf) {\n\t\t\t\t\t// Program Change\n\t\t\t\t\teventJson.name = 'Program Change';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0xc0 + 1;\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 2);\n\t\t\t\t\tthis.pointer += deltaByteCount + 2;\n\n\t\t\t\t} else if (this.data[eventStartIndex] <= 0xdf) {\n\t\t\t\t\t// Channel Key Pressure\n\t\t\t\t\teventJson.name = 'Channel Key Pressure';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0xd0 + 1;\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 2);\n\t\t\t\t\tthis.pointer += deltaByteCount + 2;\n\n\t\t\t\t} else if (this.data[eventStartIndex] <= 0xef) {\n\t\t\t\t\t// Pitch Bend\n\t\t\t\t\teventJson.name = 'Pitch Bend';\n\t\t\t\t\teventJson.channel = this.lastStatus - 0xe0 + 1;\n\t\t\t\t\tthis.addMessage(eventJson, eventStartIndex, 2);\n\t\t\t\t\tthis.pointer += deltaByteCount + 3;\n\n\t\t\t\t} else {\n\t\t\t\t\teventJson.name = 'Unknown.  Pointer: ' + this.pointer.toString() + ' ' + eventStartIndex.toString() + ' ' + this.data.length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.delta += eventJson.delta;\n\t\tthis.events.push(eventJson);\n\n\t\treturn eventJson;\n\t}\n\n\t/**\n\t * Returns true if pointer has reached the end of the track.\n\t * @param {boolean}\n\t */\n\tendOfTrack() {\n\t\tif (this.data[this.pointer + 1] == 0xff && this.data[this.pointer + 2] == 0x2f && this.data[this.pointer + 3] == 0x00) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player/midiplayerjs/track.ts","/**\n * Constants used in player.\n */\nexport class Constants {\n\tpublic static VERSION: '1.1.0';\n\tpublic static NOTES = [];\n}\n\n(() => {\n\n\t// Builds notes object for reference against binary values.\n\tvar allNotes = [['C'], ['C#', 'Db'], ['D'], ['D#', 'Eb'], ['E'], ['F'], ['F#', 'Gb'], ['G'], ['G#', 'Ab'], ['A'], ['A#', 'Bb'], ['B']];\n\tvar counter = 0;\n\n\t// All available octaves.\n\tfor (let i = -1; i <= 9; i++) {\n\t\tallNotes.forEach(noteGroup => {\n\t\t\tnoteGroup.forEach(note => Constants.NOTES[counter] = note + i);\n\t\t\tcounter++;\n\t\t});\n\t}\n\n})();\n\n\n// WEBPACK FOOTER //\n// ./src/player/midiplayerjs/constants.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { Composition } from '../player/composition';\nimport { Settings, PlayerSettings, FilterSettings } from './settings';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class DAO {\n\n    /** cached compositions */\n    private compositions: Composition[] = null;\n    /** recent compositions */\n    private recents: Composition[] = null;\n    /** cached settings */\n    public settingsCache: Settings = null;\n    /** settings observable */\n    private settingsSubject: Subject<Settings> = new Subject();\n\n\n    constructor(private storage: Storage) {\n        this.getSettings();\n    }\n\n    /**\n     * @name observeSettings\n     * @description observer pattern for the settings object\n     * @return {Subject<Settings>} the observable RxJs\n     */\n    public observeSettings(): Subject<Settings> {\n        return this.settingsSubject;\n    }\n\n    /**\n     * @name getSettings\n     * @description return the settings of the application\n     * @return {Promise<Settings>} the promise to return the settings\n     */\n    public getSettings(): Promise<Settings> {\n        return new Promise<Settings>(resolve => {\n            if (this.settingsCache == null) {\n                this.storage.ready().then(() => {\n                    this.storage.get('settings').then((settings: Settings) => {\n                        if (settings == null) {\n                            settings = new Settings();\n                        }\n\n                        if (!settings.filterSettings) {\n                            settings.filterSettings = new FilterSettings();\n                        }\n                        if (!settings.playerSettings) {\n                            settings.playerSettings = new PlayerSettings();\n                        }\n\n                        this.settingsCache = settings;\n                        resolve(settings);\n                    })\n                });\n            } else {\n                resolve(this.settingsCache);\n            }\n        });\n    }\n\n    /**\n     * @name setSettings\n     * @description set the settings for the application\n     * @return {Promise<void>} the promise to set the settings\n     */\n    public setSettings(settings: Settings): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.storage.ready().then(() => {\n                this.storage.set('settings', settings).then((result: any) => {\n                    this.settingsCache = settings;\n                    this.settingsSubject.next(this.settingsCache);\n                    resolve();\n                })\n            });\n        });\n    }\n\n    /**\n     * @name getRecents\n     * @description return all the recents compositions\n     * @return {Promise<Composition[]>} the promise to return all the recent compositions saved\n     */\n    public getRecents(): Promise<Composition[]> {\n        return new Promise<Composition[]>(resolve => {\n            if (this.recents == null) {\n                this.storage.ready().then(() => {\n                    this.storage.get('recents').then((compositions: Composition[]) => {\n                        if (compositions == null) {\n                            compositions = [];\n                        }\n                        this.recents = compositions;\n                        resolve(compositions);\n                    })\n                });\n            } else {\n                resolve(this.recents);\n            }\n        });\n    }\n\n    /**\n     * @name setRecents\n     * @description set the recent compositions to the db (this method doesn't add, only set)\n     * @param {Composition[]} comps the compositions to set\n     * @return the promise to set the recent compositions\n     */\n    public setRecents(comps: Composition[]): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.storage.ready().then(() => {\n                this.storage.set('recents', comps).then((result: any) => {\n                    this.recents = comps;\n                    resolve();\n                })\n            });\n        });\n    }\n\n    /**\n     * @name addRecent\n     * @description add a recent composition to the list of recent compositions\n     * @param {Composition} comp the composition to add to recent compositions\n     * @return {Promise<void>} the promise to add a recent composition to the list of compositions\n     */\n    public addRecent(comp: Composition): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.getRecents().then((comps) => {\n                for (let i = 0; i < comps.length; i++) {\n                    if (comps[i].id == comp.id) {\n                        comps.splice(i, 1);\n                        i--;\n                    }\n                }\n\n                if (comps.length > 10) {\n                    comps.splice(comps.length - 1, 1);\n                }\n                comps.splice(0, 0, comp);\n                this.setRecents(comps).then(() => {\n                    resolve();\n                });\n            });\n        });\n    }\n\n\n    /**\n     * @name removeRecent\n     * @description remove a certain recent composition from the database\n     * @param {string} the id of the recent composition to be removed\n     * @return the promise to remove the recent composition\n     */\n    public removeRecent(id: string): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.getRecents().then((comps) => {\n                for (let i = 0; i < comps.length; i++) {\n                    if (comps[i].id == id) {\n                        comps.splice(i, 1);\n                        break;\n                    }\n                }\n                this.setRecents(comps).then(() => {\n                    resolve();\n                });\n            });\n        });\n    }\n\n    /**\n     * @name getCompositions\n     * @description return all the stored compositions\n     * @return {Promise<Composition[]>} the promise to return all the compositions saved\n     */\n    public getCompositions(): Promise<Composition[]> {\n        return new Promise<Composition[]>(resolve => {\n            if (this.compositions == null) {\n                this.storage.ready().then(() => {\n                    this.storage.get('compositions').then((compositions: Composition[]) => {\n                        if (compositions == null) {\n                            compositions = [];\n                        }\n                        this.compositions = compositions;\n                        resolve(compositions);\n                    })\n                });\n            } else {\n                resolve(this.compositions);\n            }\n        });\n    }\n\n    /**\n     * @name saveComposition\n     * @description save a new composition to the storage\n     * @param {Composition} composition the composition to save\n     * @return {Promise<void>} the promise to save the composition\n     */\n    public saveComposition(composition: Composition): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.getCompositions().then((comps) => {\n                comps.push(composition);\n                this.setCompositions(comps).then(() => {\n                    resolve();\n                });\n            });\n        });\n    }\n\n    /**\n     * @name updateComposition\n     * @description update a certain composition with new info\n     * @param {Composition} composition the composition to update\n     * @return {Promise<void>} the promise to save the composition\n     */\n    public updateComposition(composition: Composition): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.getCompositions().then((comps) => {\n                for (let i = 0; i < comps.length; i++) {\n                    if (comps[i].id == composition.id) {\n                        comps[i] = composition;\n                        break;\n                    }\n                }\n\n                this.setCompositions(comps).then(() => {\n                    resolve();\n                });\n            });\n        });\n    }\n\n    /**\n     * @name setCompositions\n     * @description set the compositions to the db (this method doesn't add, only set)\n     * @param {Composition[]} comps the compositions to set\n     * @return the promise to set the compositions\n     */\n    public setCompositions(comps: Composition[]): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.storage.ready().then(() => {\n                this.storage.set('compositions', comps).then((result: any) => {\n                    this.compositions = comps;\n                    resolve();\n                })\n            });\n        });\n    }\n\n    /**\n     * @name removeComposition\n     * @description remove a certain composition from the database\n     * @param {string} the id of the composition to be removed\n     * @return the promise to remove the composition\n     */\n    public removeComposition(id: string): Promise<void> {\n        return new Promise<void>(resolve => {\n            this.getCompositions().then((comps) => {\n                for (let i = 0; i < comps.length; i++) {\n                    if (comps[i].id == id) {\n                        comps.splice(i, 1);\n                        break;\n                    }\n                }\n                this.setCompositions(comps).then(() => {\n                    resolve();\n                });\n            });\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/dao/dao.ts","import { Injectable } from '@angular/core';\nimport { Platform, LoadingController } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { PlayerService } from './player.service';\nimport { MidiPlayer, MidiPlayerListener, MidiInfo } from './midiplayer';\nimport { MP3Player } from './mp3player';\nimport { Composition } from './composition';\nimport { Settings } from '../dao/settings';\nimport { MusicXML2SVG, FigureBox, ConversionOptions } from './musicxml2svg';\n//vertaal function is the xml2abc library function\ndeclare var vertaal: Function;\ndeclare var $: any;\ndeclare var Abc: any;\n\n/**\n * @interface\n * @name PlayerListener\n * @description listener interface of certains events of the MusicXML2ABCPlayer\n */\nexport interface PlayerListener {\n    /**\n     * @name svgLoaded\n     * @description event produced when the svg has been loaded\n     * @param {string} svg a svg has been loaded, need to be rendered\n     */\n    svgLoaded(svg: string): void;\n\n    /**\n     * @name initialized\n     * @description the player has been initialized\n     */\n    playerInitialized(): void;\n\n    /**\n     * @name endOfSong\n     * @description the player has ended the song\n     */\n    endOfSong(): void;\n\n    /**\n     * @name endOfPartSong\n     * @description the player has ended a part of the song, now start the next part\n     */\n    endOfPartSong(): void;\n}\n\n/**\n * @class\n * @name MusicXMLPlayer\n * @description ABC player wich is able to load musicxml/abc and play it\n */\n@Injectable()\nexport class MusicXMLPlayer implements MidiPlayerListener {\n    /** the midi player */\n    private midiPlayer: MidiPlayer = null;\n    /** the mp3 player */\n    private mp3Player: MP3Player = null;\n    /** the musicxml to svg converter */\n    private converter: MusicXML2SVG = null;\n    /** the composition to play */\n    private composition: Composition = null;\n    /** the listener to notify */\n    private listener: PlayerListener = null;\n    /** the current settings */\n    private settings: Settings = null;\n    /** the current midi info */\n    private midiInfo: MidiInfo = null;\n\n    /** current status */\n    private flagStatus: number = MusicXMLPlayer.STATUS_STOPPED;\n    private static STATUS_STOPPED: number = 0;\n    private static STATUS_PAUSED: number = 1;\n    private static STATUS_RUNNING: number = 2;\n\n    constructor(private service: PlayerService, private platform: Platform,\n        private loadingCtrl: LoadingController, private translate: TranslateService) {\n        this.midiPlayer = new MidiPlayer(service, platform);\n        this.mp3Player = new MP3Player(service, platform);\n        this.midiPlayer.setListener(this);\n    }\n\n    /**\n     * @name getMeterSignatureNumerator\n     * @description return the meter signature numerator of the score\n     * @return {number} the numerator (num/dem)\n     */\n    public getMeterSignatureNumerator(): number {\n        return this.converter.numerator;\n    }\n\n    /**\n     * @name updateSettings\n     * @description  Updating the settings that affect to the player\n     * @param {Settings} settings the new settings\n     */\n    public updateSettings(settings: Settings) {\n        this.settings = settings;\n        //checking if we have changed the play soloist paremeter\n        this.muteSoloist(!this.settings.playerSettings.playSoloist);\n        //checking if we have changed the play back paremeter\n        this.muteBack(!this.settings.playerSettings.playBack);\n        //setting metronome\n        this.midiPlayer.setMetronome(this.settings.playerSettings.metronome);\n\n        this.midiPlayer.setHighQuality(settings.playerSettings.highQuality, this.composition);\n    }\n\n    /**\n     * @name prepare\n     * @description prepare the midi player to start playing\n     */\n    public prepare() {\n        this.midiPlayer.prepare();\n    }\n\n    /**\n     * @name muteSoloist\n     * @description mute or unmute the soloist track\n     * @param {boolean} mute if we want to mute or unmute\n     */\n    private muteSoloist(mute: boolean) {\n        if (mute) {\n            this.midiPlayer.muteTrack(this.composition.frontInstrument.track);\n            if (this.composition.frontInstrument.help >= 0) {\n                this.midiPlayer.muteTrack(this.composition.frontInstrument.help);\n            }\n        } else {\n            this.midiPlayer.unmuteTrack(this.composition.frontInstrument.track);\n            if (this.composition.frontInstrument.help >= 0) {\n                this.midiPlayer.unmuteTrack(this.composition.frontInstrument.help);\n            }\n        }\n    }\n\n    /**\n     * @name isMP3BackingTrack\n     * @description check if the composition has an mp3 backing track\n     * @return {boolean} true if the composition backing track is mp3 based\n     */\n    private isMP3BackingTrack(): boolean {\n        return this.composition.mp3URL && this.composition.mp3URL.length > 0;\n    }\n\n    /**\n     * @name muteBack\n     * @description mute or unmute the backing track\n     * @param {boolean} mute if we want to mute or unmute\n     */\n    private muteBack(mute: boolean) {\n        if (mute) {\n            if (this.isMP3BackingTrack()) {\n                this.mp3Player.mute(mute);\n            } else {\n                for (let i = 0; i < this.composition.backInstruments.length; i++) {\n                    this.midiPlayer.muteTrack(this.composition.backInstruments[i].track);\n                }\n            }\n        } else {\n            if (this.isMP3BackingTrack()) {\n                this.mp3Player.mute(mute);\n            } else {\n                for (let i = 0; i < this.composition.backInstruments.length; i++) {\n                    this.midiPlayer.unmuteTrack(this.composition.backInstruments[i].track);\n                }\n            }\n        }\n    }\n\n    /**\n     * @name getTempo\n     * @description return the tempo of the midi loaded\n     * @return {number} the tempo (bpm)\n     */\n    public getTempo(): number {\n        return this.midiPlayer.getTempo();\n    }\n\n    /**\n      * @name setTempo\n      * @description set the tempo of the midi loaded\n      * @param {number} bpm beats per minute\n      */\n    public setTempo(bpm: number) {\n        this.midiPlayer.setTempo(bpm);\n    }\n\n    /**\n     * @name init\n     * @description initialize the player\n     */\n    public init(composition: Composition, listener: PlayerListener, settings: Settings) {\n        this.composition = composition;\n        this.listener = listener;\n        this.updateSettings(settings);\n\n        return new Promise<string>(resolve => {\n\n            //we load the front sheet and generate the SVG code\n            this.loadAndRenderScore(this.composition).then((frontsvg: string) => {\n                //we got the svg\n                if (this.listener != null) {\n                    this.listener.svgLoaded(frontsvg);\n                }\n                //loading mp3, midi data, soundfonts and tempo\n                Promise.all([this.loadMP3Data(this.composition),\n                this.loadMidiData(this.composition)]).then(() => {\n                    //we need to load midi before creating a map\n                    Promise.all([\n                        this.midiPlayer.loadSoundFonts(this.composition),\n                        this.createMap()]).then(() => {\n                            if (this.listener != null) {\n                                this.listener.playerInitialized();\n                            }\n                        });\n                })\n            });\n        });\n\n\n    }\n\n    /**\n     * @name loadMP3Data\n     * @description load the mp3 data backing track\n     * @param {Composition} composition the composition to load\n     */\n    private loadMP3Data(composition: Composition): Promise<void> {\n        if (this.isMP3BackingTrack()) {\n            let url = PlayerService.dataUrl1 + '/[' + composition.id + ']-' + composition.mp3URL;\n            /*\n            return new Promise<void>((resolve) => {\n                this.service.getMP3(url).then((data: string) => {\n                    this.mp3Player.reset();\n                    return this.mp3Player.init('data:audio/mp3;base64,' + data).then(() => {\n                        resolve();\n                    });\n                });\n            });*/\n            return this.mp3Player.init(url);\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * @name crateMap\n     * @description internal function to load the midi and create a map of the music\n     * @return {Promise<void>} the promise to create a map\n     */\n    private createMap(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.midiPlayer.createMap(this.composition.frontInstrument.track).then((midiInfo: MidiInfo) => {\n                this.midiInfo = midiInfo;\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * @name svgPoint\n     * @description translate page to SVG coordinates\n     * @param {any} svgGraphicElement the g element inside the SVG to transform the coordinates\n     * @param {number} x the x position relative to the svg\n     * @param {number} y the y position relative to the svg\n     */\n    private svgPoint(svgGraphicElement: any, x: number, y: number) {\n        /*\n        if (!svgGraphicElement.parent()[0].createSVGPoint) {\n            console.log(\"why\");\n        }\n        */\n        var pt = svgGraphicElement.parent()[0].createSVGPoint();\n        pt.x = x;\n        pt.y = y;\n        return pt.matrixTransform(svgGraphicElement[0].getScreenCTM().inverse());\n    }\n\n    /**\n     * @name preloadMP3\n     * @description preload the mp3 backing track\n     * @return {Promise<void>} the promise to preload the mp3\n     */\n    public preloadMP3(): Promise<void> {\n        if (this.isMP3BackingTrack()) {\n            return new Promise<void>((resolve) => {\n                let url = PlayerService.dataUrl1 + '/[' + this.composition.id + ']-' + this.composition.mp3URL;\n                this.service.getMP3(url).then((data: string) => {\n                    this.mp3Player.reset();\n                    this.mp3Player.init('data:audio/mp3;base64,' + data).then(() => {\n                        resolve();\n                    });\n                });\n            });\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * @name select\n     * @description select a certain note or rest\n     * @param {any} svgGraphicElement the g element inside the SVG to transform the coordinates\n     * @param {number} index the svg element index where is contained the note\n     * @param {number} x the x position relative to the svg\n     * @param {number} y the y position relative to the svg\n     * @return {boolean} true if it was seeked, false if it was not seeked because the mp3 backing track need to be buffered\n     */\n    public select(svgGraphicElement: any, index: number, x: number, y: number) {\n        //first we need to transform the x,y page position to an SVG scaled position\n        let point = this.svgPoint(svgGraphicElement, x, y);\n        x = point.x;\n        y = point.y;\n        //console.log(\"x:\" + x + \",y:\" + y);\n\n        //we try to select the figure selected        \n        let iFigure: number = 0;\n        let iFigureNote: number = -1;\n        let selectedFigure: FigureBox = null;\n        for (; iFigure < this.converter.figureBoxes.length; iFigure++) {\n            let figure: FigureBox = this.converter.figureBoxes[iFigure];\n            if (figure.type == 1 && !figure.ligato) {\n                iFigureNote++;\n            }\n            if (figure.barline > index) {\n                //we haven't found the figure\n                break;\n            }\n            if (figure.barline == index && x > figure.x && x < figure.x + figure.w) {\n                if (y > figure.y && y < figure.y + figure.h) {\n                    selectedFigure = figure;\n                    break;\n                }\n            }\n        }\n\n        if (selectedFigure && selectedFigure != null) {\n            //we can only select notes, not rest\n            while (selectedFigure && (selectedFigure.type != 1 || selectedFigure.ligato) &&\n                this.converter.figureBoxes.length > iFigure) {\n                iFigure++;\n                selectedFigure = this.converter.figureBoxes[iFigure];\n                if (selectedFigure && selectedFigure.type == 1 && !selectedFigure.ligato) {\n                    iFigureNote++;\n                }\n            }\n            if (selectedFigure && selectedFigure.type == 1 && !selectedFigure.ligato) {\n                //lets put the cursor over the figure\n                this.currentBarline = index;\n                if (this.$wijzer != null) {\n                    this.$wijzer.remove();\n                }\n                this.$wijzer = $(document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\"));\n                this.$wijzer.attr({ \"fill\": \"#387ef5\", \"fill-opacity\": (this.settings.playerSettings.cursor ? \"0.5\" : \"0\") });\n                $(\"svg > g\").eq(this.currentBarline).prepend(this.$wijzer);\n                //this.scrollToCursor(selectedFigure);\n                //we position correctly the focus rectangle\n                this.$wijzer.attr({\n                    \"x\": \"\" + (selectedFigure.x),\n                    \"y\": \"\" + (selectedFigure.y),\n                    \"width\": \"\" + selectedFigure.w,\n                    \"height\": \"\" + selectedFigure.h\n                });\n\n                //oh, wait, we need to search the figure in the timeline map of figures\n                let indexTimeLineOnlyNotes: number = -1;\n                let indexTimeLine = 0;\n                for (; indexTimeLine < this.converter.timeLineMap.length; indexTimeLine++) {\n                    let iFigureTimeLine = this.converter.timeLineMap[indexTimeLine];\n                    let figureTimeLine = this.converter.figureBoxes[iFigureTimeLine];\n                    if (figureTimeLine.type == FigureBox.TYPE_NOTE && !figureTimeLine.ligato) {\n                        indexTimeLineOnlyNotes++;\n                    }\n                    if (iFigureTimeLine == iFigure) {\n                        break;\n                    }\n                }\n\n                let midiinfo = this.midiInfo.notes[indexTimeLineOnlyNotes];\n                this.midiPlayer.seek(midiinfo.tempo, midiinfo.tick, midiinfo.tracks);\n                if (this.isMP3BackingTrack()) {\n                    let ms = this.midiPlayer.getCurrentTime();\n                    let resp = this.mp3Player.seek(ms);\n                    if (!resp) {\n                        //oh oh, not enough buffered info\n                        return false;\n                    }\n                }\n\n                //finally seek the midi player\n                this.currentNote = indexTimeLine;\n                this.currentBarline = index;\n                return true;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @name loadAndRenderScore\n     * @description load and render the front sheet\n     * @param {Composition} comp the composition info to render\n     * @return <Promise<string>> a promise to be returned a svg\n     */\n    public loadAndRenderScore(comp: Composition): Promise<string> {\n        if (this.composition.scoreXMLData == null) {\n\n            let obs = this.service.getScore(comp);\n\n            let self = this;\n            return new Promise<string>(resolve => {\n                obs.then((data: string) => {\n                    this.composition.scoreXMLData = data;\n                    let svg = self.renderScore();\n                    resolve(svg);\n                });\n            });\n\n        } else {\n            let svg = this.renderScore();\n            return Promise.resolve(svg);\n        }\n    }\n\n    /**\n     * @name renderScore\n     * @description render the musicxml score into svg\n     * @return {string} the svg generated\n     */\n    private renderScore(): string {\n        // options by default\n        let coptions = new ConversionOptions();\n        if (document.documentElement.clientWidth > 1024) {\n            coptions.p = 'f';\n        }\n        this.converter = new MusicXML2SVG($.parseXML(this.composition.scoreXMLData), coptions);\n        let svg = this.converter.renderScore(document.documentElement.clientWidth - 40);\n        return svg;\n    }\n\n    /**\n     * @name loadMidiData\n     * @description load the backingtrack midi file\n     * @return <Promise<void>> the promise of the midi data\n     */\n    private loadMidiData(comp: Composition): Promise<void> {\n        let obs = this.service.getMidi(comp);\n        return new Promise<void>(resolve => {\n            obs.then((data: ArrayBuffer) => {\n                this.midiPlayer.loadMidiData(data);\n                resolve();\n            });\n        });\n    }\n\n    /**\n     * @name play\n     * @description play the music, start the show!\n     */\n    public play() {\n        this.flagStatus = MusicXMLPlayer.STATUS_RUNNING;\n        this.midiPlayer.resume();\n        if (this.isMP3BackingTrack()) {\n            this.mp3Player.play();\n        }\n    }\n\n    /**\n     * @name playMetronome\n     * @description play the metronome\n     * @param {boolean} high indicates if we want to hear a high tick metronome pulse or low \n     */\n    public playMetronome(high: boolean) {\n        this.midiPlayer.playMetronome(high);\n    }\n\n    /**\n     * @name pause\n     * @description pause the music\n     */\n    public pause() {\n        this.flagStatus = MusicXMLPlayer.STATUS_PAUSED;\n\n        this.midiPlayer.pause();\n        if (this.isMP3BackingTrack()) {\n            this.mp3Player.pause();\n        }\n    }\n\n    /**\n     * @name stop\n     * @description stop the music\n     */\n    public stop(dontScroll?: boolean) {\n        this.flagStatus = MusicXMLPlayer.STATUS_STOPPED;\n\n        this.currentBarline = 0;\n        this.currentNote = 0;\n        if (this.$wijzer != null) {\n            this.$wijzer.remove();\n            this.$wijzer = null;\n        }\n        this.midiPlayer.stop();\n        if (this.isMP3BackingTrack()) {\n            this.mp3Player.stop();\n        }\n        if (!dontScroll) {\n            $('.scroll-content').animate({ scrollTop: 0 }, 1000);\n        }\n    }\n\n    /**\n     * @name resume\n     * @description resume the music\n     */\n    public resume() {\n        this.flagStatus = MusicXMLPlayer.STATUS_RUNNING;\n\n        this.midiPlayer.resume();\n        if (this.isMP3BackingTrack()) {\n            this.mp3Player.resume();\n        }\n    }\n\n    private currentBarline = 0;\n    private currentNote = 0;\n    private $wijzer: any = null;\n\n    /**\n     * @name endOfSong\n     * @description the player notify that the midi has ended\n     */\n    endOfSong() {\n        if (this.listener != null) {\n            this.listener.endOfSong();\n        }\n    }\n\n    /**\n     * @name endOfPartSong\n     * @description the player notify that the song start now a new part\n     */\n    endOfPartSong() {\n        this.pause();\n\n        //oh, wait, we need to search the figure in the timeline map of figures\n        let indexTimeLineOnlyNotes: number = -1;\n        let indexTimeLine = 0;\n        for (; indexTimeLine < this.converter.timeLineMap.length; indexTimeLine++) {\n            let iFigureTimeLine = this.converter.timeLineMap[indexTimeLine];\n            let figureTimeLine = this.converter.figureBoxes[iFigureTimeLine];\n            if (figureTimeLine.type == FigureBox.TYPE_NOTE && !figureTimeLine.ligato) {\n                indexTimeLineOnlyNotes++;\n            }\n            if (iFigureTimeLine == this.currentNote) {\n                break;\n            }\n        }\n\n        let midiinfo = this.midiInfo.notes[indexTimeLineOnlyNotes];\n        this.midiPlayer.seek(midiinfo.tempo, midiinfo.tick, midiinfo.tracks);\n        if (this.isMP3BackingTrack()) {\n            let ms = this.midiPlayer.getCurrentTime();\n            this.mp3Player.seek(ms);\n        }\n\n        if (this.listener != null) {\n            this.listener.endOfPartSong();\n        }\n    }\n\n    /**\n     * @override\n     */\n    midiUpdate(event) {\n        if (event.name == 'Note on') {\n            if (event.track == this.composition.frontInstrument.track) {\n                if (event.velocity <= 0) {\n                    return;\n                }\n\n                //first we get the figurebox to be highlighted\n                let indexBox: number = this.converter.timeLineMap[this.currentNote];\n                let figure: FigureBox = this.converter.figureBoxes[indexBox];\n                if (typeof figure === \"undefined\") {\n                    return;\n                }\n                while (figure.type != FigureBox.TYPE_NOTE || figure.ligato) {\n                    this.currentNote++;\n                    indexBox = this.converter.timeLineMap[this.currentNote];\n                    figure = this.converter.figureBoxes[indexBox];\n                    if (typeof figure === \"undefined\") {\n                        return;\n                    }\n                }\n\n                var self = this;\n                var delay_func = function (varFigure) {\n                    //next we create the focus rectangle \n                    if (self.$wijzer == null || self.currentBarline != varFigure.barline) {\n                        self.currentBarline = figure.barline;\n\n                        if (self.$wijzer != null) {\n                            self.$wijzer.remove();\n                        }\n                        self.$wijzer = $(document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\"));\n                        self.$wijzer.attr({ \"fill\": \"#387ef5\", \"fill-opacity\": (self.settings.playerSettings.cursor ? \"0.5\" : \"0\") });\n                        $(\"svg > g\").eq(self.currentBarline).prepend(self.$wijzer);\n                        self.scrollToCursor(varFigure);\n\n                    }\n\n                    //we position correctly the focus rectangle\n                    self.$wijzer.attr({\n                        \"x\": \"\" + (varFigure.x),\n                        \"y\": \"\" + (varFigure.y),\n                        \"width\": \"\" + varFigure.w,\n                        \"height\": \"\" + varFigure.h\n                    });\n\n                    //lets prepare next cursor\n                    let nextFigure: FigureBox = self.getNextFigure(self.currentNote, 1);\n                    if (nextFigure != null && self.currentBarline != nextFigure.barline) {\n                        self.scrollToCursor(figure, nextFigure);\n                    }\n                }\n\n                var delay = this.settings.playerSettings.bluetoothDelay;\n                if (delay > 0) {\n                    setTimeout(() => {\n                        if (self.flagStatus != MusicXMLPlayer.STATUS_STOPPED) {\n                            delay_func(figure);\n                        }\n                    }, delay);\n                } else {\n                    delay_func(figure);\n                }\n\n                this.currentNote++;\n                if (this.converter.startParts.length > 1 && this.converter.timeLineMap.length > this.currentNote) {\n\n                    //ensuring that the next figure is a note figure\n                    var tmpCurrentNote = this.currentNote;\n                    let figure: FigureBox = this.converter.figureBoxes[tmpCurrentNote];\n                    while (figure != null && (figure.type != FigureBox.TYPE_NOTE || figure.ligato)) {\n                        tmpCurrentNote++;\n                        if (this.converter.timeLineMap.length > this.currentNote) {\n                            indexBox = this.converter.timeLineMap[tmpCurrentNote];\n                            figure = this.converter.figureBoxes[indexBox];\n                        } else {\n                            figure = null;\n                        }\n                    }\n\n                    //checking if the start part of the next note figure match with any startpart\n                    if (figure != null) {\n                        for (var i = 0; i < this.converter.startParts.length; i++) {\n                            if (this.converter.startParts[i] == tmpCurrentNote) {\n                                //a new part is comingç\n                                this.currentNote = tmpCurrentNote;\n                                this.endOfPartSong();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    /**\n     * @name scrollToCursor\n     * @description scroll the score to the cursor position (or the future cursor defined by the nextFigure)\n     * @param {FigureBox} currentFigure the current figure which have the cursor\n     * @param {FigureBox} nextFigure the next figure which have the cursor\n     */\n    private scrollToCursor(currentFigure: FigureBox, nextFigure?: FigureBox) {\n        var y = 0;\n        var svgs = $(\"svg > g\");\n        let toFigure: FigureBox = currentFigure;\n        if (nextFigure) {\n            toFigure = nextFigure;\n        }\n\n        //FIXME, calculate the absolute position not working, why!?\n        for (var isvg = 0; isvg < toFigure.barline; isvg++) {\n            var svg = svgs[isvg];\n            if (svg) {\n                y = y + svg.getBoundingClientRect().height;\n            } else {\n                return;\n            }\n        }\n        let svgHeight = svgs[currentFigure.barline].getBoundingClientRect().height;\n        if (this.settings.playerSettings.cursorAnimation) {\n            $('.scroll-content').animate({ scrollTop: y - (nextFigure ? svgHeight : 0) - 50 }, 200);\n        } else {\n            $('.scroll-content').scrollTop(y - (nextFigure ? svgHeight : 0) - 50);\n        }\n    }\n\n    /**\n     * @name getNextFigure\n     * @description return the next figure to play\n     * @param {number} indexBox the indexBox to start searching\n     * @param {number} count the count to define 'next' figure\n     * @return {FigureBox} the figurebox found or null\n     */\n    private getNextFigure(currentNote: number, count: number): FigureBox {\n        let icount: number = 0;\n        currentNote++;\n        while (icount < count) {\n            if (currentNote >= this.converter.timeLineMap.length) {\n                return null;\n            }\n            let indexBox: number = this.converter.timeLineMap[currentNote];\n            let nextFigure: FigureBox = this.converter.figureBoxes[indexBox];\n            if (nextFigure.type == FigureBox.TYPE_NOTE && !nextFigure.ligato) {\n                icount++;\n            }\n            currentNote++;\n        }\n        if (count == icount) {\n            let indexBox: number = this.converter.timeLineMap[currentNote];\n            let nextFigure: FigureBox = this.converter.figureBoxes[indexBox];\n            return nextFigure;\n        } else {\n            return null;\n        }\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/player/musicxmlplayer.ts","//vertaal function is the xml2abc library function\ndeclare var vertaal: Function;\n//Abc function is the abc2svg library function\ndeclare class Abc {\n    constructor(obj: any);\n    tosvg(title: string, abc: string);\n    sx(x: number);\n    sy(y: number);\n}\n\n\n/**\n * @class\n * @name MusicXML2SVG\n * @description MusicXML converter to SVG using libraries:\n * - xml2abc.js from Wim Vree (http://wim.vree.org/js/)\n * - abc2svg.js from Jef Moine (http://moinejf.free.fr/js/)\n * and some minor stuff from my side to join both\n */\nexport class MusicXML2SVG {\n    /**set of const used by abc2svg library */\n    private static ABC2SVG_TYPE_BAR: number = 0;\n    private static ABC2SVG_TYPE_GRACE: number = 4;\n    /*\n    private static ABC2SVG_TYPE_METER: number = 6;\n    */\n    private static ABC2SVG_TYPE_NOTE: number = 8;\n    private static ABC2SVG_TYPE_REST: number = 10;\n    /*\n    private static ABC2SVG_TYPE_TEMPO: number = 14;\n    private static ABC2SVG_TYPE_BASE_LEN: number = 1536;\n    */\n\n    /**\n     * The generated svg\n     */\n    public svg: string = '';\n    /**\n     * Number of barlines at the score rendered\n     */\n    public barlines: number = 0;\n    /**\n     * List of error messages generated\n     */\n    public errorMessages: string[] = [];\n\n    /**\n     * List of bounding boxes of each figure at the svg\n     */\n    public figureBoxes: FigureBox[] = [];\n\n    /**\n     * Timeline Map which is able to say what figureboxes must be played in sequence\n     */\n    public timeLineMap: number[] = [];\n\n    /**\n     * List of index where a new part of the composition starts.\n     * All compositions has at least one part starting at 0 position\n     */\n    public startParts: number[] = [0];\n\n    /**\n     * numerator and denominator of the meter signature\n     */\n    public numerator: number;\n    public denominator: number;\n\n    /**\n     * the abc2svg library with user config\n     */\n    public abc2svg: Abc = null;\n\n    /** list of ligatos recovered, just for internal adjustements */\n    private ligatos: boolean[] = [];\n\n    /** list of abc graces found */\n    private graces: string[] = [];\n    private indexGrace: number = 0;\n\n    /**\n     * @constructor\n     * @param {string} musicXML the musicxml string to be rendered\n     * @param {RenderOptions} the options required by xml2abc library\n     */\n    constructor(private musicXML: string, private options: ConversionOptions) {\n    }\n\n    /**\n     * @name reset\n     * @description Reset all the parameters to start a new conversion and render\n     */\n    private reset() {\n        this.svg = \"\";\n        this.barlines = 0;\n        this.errorMessages = [];\n        this.figureBoxes = [];\n        this.ligatos = [];\n        this.graces = [];\n        this.indexGrace = 0;\n    }\n\n    /**\n     * @name analyseGraces\n     * @description analyse the graces obtained by the abc code\n     */\n    private analyseGraces(abcCode: string) {\n        let index: number = -1;\n        index = abcCode.indexOf(\"{\");\n        while (index >= 0) {\n            let indexTo: number = abcCode.indexOf(\"}\", index + 1);\n            let str: string = abcCode.substr(index + 1, indexTo - index - 1);\n            this.graces.push(str);\n            index = abcCode.indexOf(\"{\", indexTo);\n        }\n    }\n\n    /**\n     * @name renderScore\n     * @description render a musicxml score using SVG. This only generates the SVG. You must insert it into the DOM to show it.\n     * @param {number} width width of the svg generated\n     * @return {string} the svg created\n     */\n    public renderScore(width: number): string {\n        this.reset();\n        var inforesult = vertaal(this.musicXML, this.options);\n        //console.log(inforesult[0]);\n        this.analyseGraces(inforesult[0]);\n        let self = this;\n\n        /*See: http://moinejf.free.fr/js/interface-1.xhtml*/\n        var user = {\n            'img_out': function (str: string) {\n                self.imgOut(str);\n            },\n            'errmsg': function (txt: string, line: number, col: number) {\n                self.errMsg(txt, line, col);\n            },\n            'read_file': this.readFile,\n            'anno_start': function (type: string, startOffset: number, stopOffset: number, x: number, y: number, w: number, h: number) {\n                self.annoStart(type, startOffset, stopOffset, x, y, w, h);\n            },\n            'get_abcmodel': function (tsFirst: any, voice_tb: any[], music_types: string[], info: any) {\n                self.timeLine(tsFirst, voice_tb, music_types, info);\n            },\n            'imagesize': 'width=\"' + width + '\"',\n            'page_format': true,\n        }\n\n        //inforesult[0] = inforesult[0].replace(new RegExp(\"0.83\", 'g'), \"2.00\");\n        //console.log(inforesult[0]);\n        this.abc2svg = new Abc(user);\n        this.abc2svg.tosvg('abc2svg', inforesult[0]);\n        return this.svg;\n\n    }\n\n    /**\n     * @name imgOut\n     * @description Callback function which called when a new part of the SVG image has been generated.\n     * @param {string} str the string svg rendered\n     * @see http://moinejf.free.fr/js/interface-1.xhtml\n     */\n    private imgOut(str: string) {\n        /*\n        console.log(str);\n        */\n        if (str.indexOf('<svg') != -1) {\n            this.barlines++;\n            /*\n            str = str.replace(/width=\"(\\d*)px\"\\s*height=\"(\\d*)px\"/, 'width=\"$1px\" height=\"$2px\" viewbox=\"0 0 $1 $2\"');\n            bxs = self.keySort(bxs), bys = self.keySort(bys);\n            if (bxs.length > 1 &&   // the first barline is at bxs[1] because bxs[0] == left side staff\n                bxs[1] < Math.min.apply(null, nxs)) {  // first barline < min x-coor of all notes in this line\n                bxs.splice(0, 1);  // remove left side staff because there already is a left barline\n            }\n            bars.push({ 'xs': bxs, 'ys': bys });\n            bxs = {}, bys = {}, nxs = [];\n            */\n        }\n        this.svg = this.svg + str;\n    }\n\n    /**\n     * @name errMsg\n     * @description Callback function which is called when some error has been found during the ABC parsing or the SVG generation\n     * @param {string} txt text of the error\n     * @param {number} line line number (Position of the error in the ABC source, same as the corresponding argument in errbld())\n     * @param {number} col column number (Position of the error in the ABC source, same as the corresponding argument in errbld())\n     * @see http://moinejf.free.fr/js/interface-1.xhtml\n     */\n    private errMsg(txt: string, line: number, col: number) {\n        this.errorMessages.push(txt);\n    }\n\n\n    /**\n     * @name readFile\n     * @description Callback function which is called to read a file. It is called when a %%abc-include command has been found in the ABC source.\n     * @param {string} filename the name of the file\n     * @see http://moinejf.free.fr/js/interface-1.xhtml\n     */\n    private readFile(filename) {\n        // %%abc-include, unused \n        return '';\n    }\n\n    //CAUTION\n    //there is a bug or something when reporting the figures by the abc2svg library\n    //sometimes it reports an inexistent note before the first one, which is overlapping the cleff\n    //the only way to detect it is that it is overlapping the cleff\n    private clefDetected: boolean = false;\n\n    /**\n     * @name annoStart\n     * @description Callback function for setting ABC references in the SVG images. This function is called just before the generation of a music element\n     * @param {string} type It is one of annot, bar, clef, gchord, grace, key, meter, note, part, rest, tempo.\n     * @param {number} startOffset offset of the music element in the ABC source \n     * @param {number} stopOffset offset of the end of music element in the ABC source\n     * @param {number} x x Coordinates of a rectangle which covers the music element \n     * @param {number} y y Coordinates of a rectangle which covers the music element\n     * @param {number} w width Coordinates of a rectangle which covers the music element\n     * @param {number} x height Coordinates of a rectangle which covers the music element\n     * @see http://moinejf.free.fr/js/interface-1.xhtml\n     */\n    private annoStart(type: string, startOffset: number, stopOffset: number, x: number, y: number, w: number, h: number) {\n        //console.log(type)\n        if (type == 'clef') {\n            //CAUTION\n            //there is a bug or something when reporting the figures by the abc2svg library\n            //sometimes it reports an inexistent note before the first one, which is overlapping the cleff\n            //the only way to detect it is that it is overlapping the cleff\n            //ups, no, let's try detecting it because the first note after the clef is not correctly aligned with others\n            this.clefDetected = true;//clefBoxHalf = parseFloat(this.abc2svg.sx(x).toFixed(2)) + (w / 2);\n        }\n        if (type == 'meter') {\n            //we discard this clef, it is the first one, and usually the meter move the note to the right\n            this.clefDetected = false;\n        }\n        if (type == 'note' || type == 'rest' || type == 'grace') {\n\n            let bbox = new FigureBox();\n            bbox.barline = this.barlines;\n            bbox.type = (type == 'note' || type == 'grace' ? FigureBox.TYPE_NOTE : FigureBox.TYPE_REST);\n            bbox.x = parseFloat(this.abc2svg.sx(x).toFixed(2));\n            bbox.y = parseFloat(this.abc2svg.sy(y).toFixed(2));\n            bbox.w = w;\n            bbox.h = h;\n            bbox.offsetStart = startOffset;\n            bbox.offsetStop = stopOffset;\n            bbox.ligato = this.ligatos[this.figureBoxes.length];\n\n            /*\n            //CAUTION\n            //there is a bug or something when reporting the figures by the abc2svg library\n            //sometimes it reports an inexistent note before the first one, which is overlapping the cleff\n            //the only way to detect it is that it is overlapping the cleff\n            //ups, no, let's try detecting it because the first note after the clef is not correctly aligned with others\n            if (this.clefDetected) {\n                if (this.firstFigureLeft < 0) {\n                    this.firstFigureLeft = bbox.x;\n                    this.figureBoxes.push(bbox);\n                } else {\n                    if (this.firstFigureLeft > bbox.x) {\n                        //we discard this!! it seem a bug note\n                        console.warn(\"Warning! this seems a bug note: (expected:\" + this.firstFigureLeft + \", obtained:\" + bbox.x + \")\");\n                        //this.figureBoxes.push(bbox);\n                    } else {\n                        this.figureBoxes.push(bbox);\n                    }\n                }\n            } else {\n                this.figureBoxes.push(bbox);\n            }*/\n            this.figureBoxes.push(bbox);\n\n\n        } else {\n            //console.log(type);\n        }\n    }\n\n\n    /**\n     * @name timeLine\n     * @description Callback function to get the internal representation of the music just before SVG generation.\n     * @param {any} tsFirst First musical symbol in the time sequence. The symbols are double-linked by time by ts_next / ts_prev. The start of a new sequence is marked by seqst.\n     * @param {any[]} voice_tb  Voice table. The first symbol of a voice is sym. The symbols are double-linked in a voice by next / prev.\n     * @param {string[]} music_types Array giving the symbol type from integer value of the symbol attribute type. \n     * @param {any} info Text of the information fields (T:, M:, Q:, P:...).  A newline ('\\n') separates the appended values.\n     * @see http://moinejf.free.fr/js/interface-1.xhtml\n     */\n    private timeLine(tsFirst: any, voice_tb: any[], music_types: string[], info: any) {\n        //let's do a timeline\n        let map: number[] = [];\n        let startReps = [];\n        let index: number = 0;\n        let indexFirstEndings = [];\n        let indexSecondEndings = [];\n        let indexSegno = -1;\n        let indexFine = -1;\n        let indexToCoda = -1;\n        let flagLastLigato = false;\n        let endPart = false;\n\n        //getting the meter signature (numerator/denominator)\n        let meterSignature: string[] = info.M.split(\"/\");\n        this.numerator = parseInt(meterSignature[0]);\n        this.denominator = parseInt(meterSignature[1]);\n\n        for (var ts = tsFirst; ts; ts = ts.ts_next) {\n            switch (ts.type) {\n                case MusicXML2SVG.ABC2SVG_TYPE_GRACE:\n                case MusicXML2SVG.ABC2SVG_TYPE_NOTE:\n                case MusicXML2SVG.ABC2SVG_TYPE_REST:\n                    map.push(index);\n\n                    //are we starting a new part?\n                    if (endPart && !(ts.type == MusicXML2SVG.ABC2SVG_TYPE_REST)) {\n                        this.startParts.push(map.length - 1);\n                        endPart = false;\n                    }\n\n                    if (ts.type == MusicXML2SVG.ABC2SVG_TYPE_GRACE) {\n                        this.ligatos.push(flagLastLigato);\n                        let gracestr = this.graces[this.indexGrace];\n                        this.indexGrace++;\n                        let notes = gracestr.length - gracestr.replace(/[A-G]/g, '').length;\n                        notes = notes + gracestr.length - gracestr.replace(/[a-g]/g, '').length;\n                        for (var igrace = 0; igrace < notes - 1; igrace++) {\n                            index++;\n                            map.push(index);\n                            this.ligatos.push(flagLastLigato);\n                        }\n                    }\n\n                    //we need to save the ligato info to link after with the svg figure boxes generated\n                    if (ts.notes) {\n                        this.ligatos.push(flagLastLigato);\n                        var ti1 = ts.notes[0].ti1;\n                        if (ti1 == 3) {\n                            //ligato!\n                            flagLastLigato = true;\n                        } else {\n                            flagLastLigato = false;\n                        }\n                    }\n\n\n                    //lets see if we found a segno annotation\n                    if (ts.a_dd && ts.a_dd.length > 0) {\n                        for (var idd = 0; idd < ts.a_dd.length; idd++) {\n                            var dd = ts.a_dd[idd];\n                            if (dd.glyph === 'sgno') {\n                                //segno\n                                indexSegno = index;\n                            } else {\n                                //console.log(dd.glyph);\n                            }\n                        }\n                    }\n\n                    index++;\n                    break;\n                case MusicXML2SVG.ABC2SVG_TYPE_BAR:\n                    if (ts.text) {\n                        if (ts.text.trim() === '1') {\n                            //first ending\n                            indexFirstEndings.push(index);\n                        } else if (ts.text.trim() === '2') {\n                            //second ending\n                            indexSecondEndings.push(index);\n                        }\n                    }\n\n                    if (ts.a_gch && ts.a_gch.length > 0) {\n                        for (var ig = 0; ig < ts.a_gch.length; ig++) {\n                            var gch = ts.a_gch[ig];\n                            let text = gch.text.toLowerCase();\n\n                            if (text === \"fine\") {\n                                //we found a fine annotation\n                                indexFine = index;\n                                continue;\n                            }\n                            if (text === \"to coda\") {\n                                //we found a go to coda annotation\n                                indexToCoda = index;\n                                continue;\n                            }\n\n\n                            let start = 0;\n                            let end = index;\n                            let repeat = false;\n                            if (text.startsWith(\"d.s.\") || text.startsWith(\"d.c.\")) {\n                                //da segno or da capo, al fine or al coda\n\n                                //we have a segno (da segno to...)?\n                                if (indexSegno > -1 && text.startsWith(\"d.s.\")) {\n                                    start = indexSegno;\n                                }\n                                //we have a fine (...to fine)\n                                if (indexFine > -1) {\n                                    end = indexFine;\n                                } else if (indexToCoda > -1) {\n                                    //to coda!\n                                    end = indexToCoda;\n                                }\n\n                                repeat = true;\n                            }\n\n                            //lets create the repeat timeline                            \n                            if (repeat) {\n                                for (var irep = start; irep < end; irep++) {\n                                    //we need to check first endings.. after a repetition we should pass again through first endings\n                                    for (var ifirst = 0; ifirst < indexFirstEndings.length; ifirst++) {\n                                        var firstEnd = indexFirstEndings[ifirst];\n                                        if (firstEnd == irep) {\n                                            irep = indexSecondEndings[ifirst];\n                                            break;\n                                        } else if (firstEnd > irep) {\n                                            break;\n                                        }\n                                    }\n                                    map.push(irep);\n                                }\n                            }\n                        }\n                    }\n\n                    if (ts.bar_type === '||') {\n                        //we discard it as an end of a new part if the previous bar was a :: or :|\n                        //then we supose this is the end of the repetition\n                        let tmp = ts.prev;\n                        while (tmp.type != MusicXML2SVG.ABC2SVG_TYPE_BAR) {\n                            tmp = tmp.prev;\n                        }\n                        if (!(tmp.bar_type === '::' || tmp.bar_type === ':|')) {\n                            //this part ends... a new part is coming?\n                            endPart = true;\n                        }\n                    }\n\n                    if (ts.bar_type === '|:' || ts.bar_type === '||') {\n                        //start a repetition\n                        startReps.push(index);\n                    } else if (ts.bar_type === '::' || ts.bar_type === ':|') {\n                        //now we repeat from the start to the end\n                        let indexStartRep = startReps[startReps.length - 1];\n                        if (!indexStartRep) {\n                            //if we don't have yet a start definition, then we start from the begining\n                            indexStartRep = 0;\n                        }\n                        let toIndex = index;\n                        if (indexFirstEndings.length == indexSecondEndings.length && ts.text && ts.text.trim() === '2') {\n                            toIndex = indexFirstEndings[indexFirstEndings.length - 1];\n                        }\n                        for (var i = indexStartRep; i < toIndex; i++) {\n                            map.push(i);\n                        }\n                        startReps = startReps.slice(0, startReps.length - 1);\n\n                        if (ts.bar_type === '::') {\n                            //start a repetition\n                            startReps.push(index);\n                        }\n                    }\n                    break;\n            }\n        }\n        this.timeLineMap = map;\n    }\n\n\n}\n\n/**\n * @name ConversionOptions\n * @description set of conversion options required by xml2abc.js library.\n */\nexport class ConversionOptions {\n    public u: number = 0;  //unfold repeats (1)\n    public b: number = 0;  //bars per line\n    public n: number = 0;  //chars per line\n    public c: number = 0;  //credit text filter level (0-6)\n    public v: number = 3;  //no volta on higher voice numbers (1)\n    public d: number = 0;  //denominator unit length (L:)\n    public m: number = 2;  //no midi, minimal midi, all midi output (0,1,2)\n    public x: number = 0;  //no line breaks (1)\n    public t: number = 1;  //clef dependent step value (1)\n    public p: string = '1.0,' + Math.round((document.documentElement.clientWidth * 20) / 640) + ',0,0';   // page format: scale (1.0), width, left and right margin in cm\n}\n\n/**\n * @name FigureBox\n * @description represent the bounding box of a Note or a Rest inside the svg result\n */\nexport class FigureBox {\n    public static TYPE_NOTE: number = 1;\n    public static TYPE_REST: number = 2;\n\n    /** the x position */\n    public x: number = 0;\n    /** the y position */\n    public y: number = 0;\n    /** the width of the rectangle */\n    public w: number = 0;\n    /** the height of the rectangle */\n    public h: number = 0;\n    /** type of the figure, note or rest */\n    public type: number = FigureBox.TYPE_NOTE;\n    /** the bar line where it is being rendered */\n    public barline: number = 0;\n\n    /** indicates if its a ligato */\n    public ligato: boolean = false;\n\n    /** startOffset offset of the music element in the ABC source */\n    public offsetStart: number = 0;\n    /** stopOffset offset of the end of music element in the ABC source */\n    public offsetStop: number = 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/player/musicxml2svg.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Http, Response, Request, RequestOptions, RequestOptionsArgs, RequestMethod, ResponseContentType } from '@angular/http';\nimport { Composition, Collection } from '../../../player/composition';\nimport { encode } from '../../../util/Util';\nimport { PlayerService } from '../../../player/player.service';\n\n@Injectable()\nexport class SearchService {\n\n    constructor(private http: Http) { }\n\n    /**\n     * @name getServerCompositionIndex\n     * @description get the list of compositions available at the github server\n     * @return {Composition[]} the list of compositions\n     */\n    public getServerCompositionIndex(): Observable<Composition[]> {\n        return this.http\n            .get(PlayerService.dataUrl1 + '/index-compositions.json')\n            .map((r: Response) => {\n                return <Composition[]>r.json();\n            })\n            .catch((error) => {\n                console.error(error);\n                return [];\n            });\n    }\n\n    /**\n     * @name getServerCollectionIndex\n     * @description get the list of collections available at the github server\n     * @return {Collection[]} the list of collection\n     */\n    public getServerCollectionIndex(): Observable<Collection[]> {\n        return this.http\n            .get(PlayerService.dataUrl1 + '/index-collections.json')\n            .map((r: Response) => {\n                return <Collection[]>r.json();\n            })\n            .catch((error) => {\n                console.error(error);\n                return [];\n            });\n    }\n\n    /**\n     * @name downloadMidiB64\n     * @description download the midi binary and encode to b64\n     * @param {Composition} comp the composition info to download\n     * @return {Observable<string>} the observable to get the b64 string\n     */\n    public downloadMidiB64(comp: Composition): Observable<{} | string> {\n        let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.midiURL;\n        var basicOptions: RequestOptionsArgs = {\n            url: url,\n            method: RequestMethod.Get,\n            search: null,\n            headers: null,\n            body: null,\n            withCredentials: false,\n            responseType: ResponseContentType.ArrayBuffer\n        };\n\n        var reqOptions = new RequestOptions(basicOptions);\n        var req = new Request(reqOptions);\n        return this.http.request(req)\n            .map((r: Response) => {\n                let ab: ArrayBuffer = r.arrayBuffer();\n                return encode(ab);\n            })\n            .catch((error) => {\n                console.error(error);\n                throw error;\n            });\n    }\n\n    /**\n     * @name downloadScore\n     * @description download the score of the composition\n     * @param {Composition} comp the composition info to download\n     * @return {Observable<string>} the observable to get the XML score string\n     */\n    public downloadScore(comp: Composition): Observable<{} | string> {\n        let url = PlayerService.dataUrl1 + '/[' + comp.id + ']-' + comp.scoreURL;\n        return this.http\n            .get(url)\n            .map((r: Response) => {\n                return r.text();\n            })\n            .catch((error) => {\n                console.error(error);\n                throw error;\n            });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/search/search.service.ts","/**\n * pitch detect library from https://github.com/cwilso/PitchDetect\n */\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2014 Chris Wilson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\nimport { Observer, Observable } from 'rxjs/Rx';\n\nexport class PitchDetectData {\n    constructor(pitch: number, note: string, detune: string, detuneAmount: number) {\n        this.pitch = pitch;\n        this.note = note;\n        this.detune = detune;\n        this.detuneAmount = detuneAmount;\n    }\n\n    public pitch: number = 0;\n    public note: string = \"\";\n    public detune: string = \"\";\n    public detuneAmount: number = 0;\n}\nexport class PitchDetect {\n    private static MAX_SIZE = 0;\n    private audioContext: AudioContext = null;\n    private mediaStreamSource: MediaStreamAudioSourceNode = null;\n    private analyser: AnalyserNode = null;\n    private sourceNode: OscillatorNode = null;\n    public isLiveInput: boolean = false;\n    public isPlaying: boolean = false;\n\n    private observable: Observable<PitchDetectData>;\n    private observer: Observer<PitchDetectData>;\n\n\n    /*    \n    private theBuffer = null;\n    private DEBUGCANVAS = null;\n    private detectorElem;\n    private canvasElem;\n    private waveCanvas;\n    private pitchElem;\n    private noteElem;\n    private detuneElem;\n    private detuneAmount;\n    */\n\n    constructor() {\n        this.audioContext = new ((<any>window).AudioContext || (<any>window).webkitAudioContext)();//new AudioContext();\n        PitchDetect.MAX_SIZE = Math.max(4, Math.floor(this.audioContext.sampleRate / 5000));\t// corresponds to a 5kHz signal\n        this.observable = new Observable(observer => this.observer = observer);\n    }\n\n    close() {\n        this.audioContext.close();\n    }\n\n    private error() {\n        console.error('Stream generation failed.');\n    }\n\n    private getUserMedia(dictionary, callback) {\n        try {\n            var n = <any>navigator;\n            n.getUserMedia = n.getUserMedia || n.webkitGetUserMedia || n.mozGetUserMedia || n.msGetUserMedia;\n            navigator.getUserMedia(dictionary, callback, this.error);\n        } catch (e) {\n            console.error('getUserMedia threw exception :' + e);\n        }\n    }\n\n    private gotStream(stream) {\n        // Create an AudioNode from the stream.\n        this.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n\n        // Connect it to the destination.\n        this.analyser = this.audioContext.createAnalyser();\n        this.analyser.fftSize = 2048;\n        this.mediaStreamSource.connect(this.analyser);\n        this.updatePitch();\n    }\n\n    public toggleOscillator() {\n        if (this.isPlaying) {\n            //stop playing and return\n            this.sourceNode.stop(0);\n            this.sourceNode = null;\n            this.analyser = null;\n            this.isPlaying = false;\n            if (!window.cancelAnimationFrame)\n                window.cancelAnimationFrame = window.webkitCancelAnimationFrame;\n            window.cancelAnimationFrame(this.rafID);\n            return \"play oscillator\";\n        }\n        this.sourceNode = this.audioContext.createOscillator();\n\n        this.analyser = this.audioContext.createAnalyser();\n        this.analyser.fftSize = 2048;\n        this.sourceNode.connect(this.analyser);\n        this.analyser.connect(this.audioContext.destination);\n        this.sourceNode.start(0);\n        this.isPlaying = true;\n        this.updatePitch();\n\n        return \"stop\";\n    }\n\n\n    private micStream = null;\n\n    public toggleLiveInput(): Observable<PitchDetectData> {\n        if (this.isPlaying) {\n            //stop playing and return\n            this.sourceNode.stop(0);\n            this.sourceNode = null;\n            this.analyser = null;\n            this.isPlaying = false;\n            if (!window.cancelAnimationFrame)\n                window.cancelAnimationFrame = window.webkitCancelAnimationFrame;\n            window.cancelAnimationFrame(this.rafID);\n        }\n        if (this.isLiveInput) {\n            var tracks = this.micStream.getTracks();\n            for (var i = 0; i < tracks.length; i++) {\n                tracks[i].stop();\n            }\n            return;\n        }\n\n        let self = this;\n        this.isLiveInput = true;\n        this.getUserMedia(\n            {\n                \"audio\": {\n                    \"mandatory\": {\n                        \"googEchoCancellation\": \"false\",\n                        \"googAutoGainControl\": \"false\",\n                        \"googNoiseSuppression\": \"false\",\n                        \"googHighpassFilter\": \"false\"\n                    },\n                    \"optional\": []\n                },\n            }, function (stream) {\n                self.micStream = stream;\n                self.gotStream(stream);\n            });\n\n        return this.observable;\n    }\n\n\n    private rafID = null;\n    //private tracks = null;\n    private buflen = 1024;\n    private buf = new Float32Array(this.buflen);\n    private noteStrings = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n\n    private noteFromPitch(frequency) {\n        var noteNum = 12 * (Math.log(frequency / 440) / Math.log(2));\n        return Math.round(noteNum) + 69;\n    }\n\n    private frequencyFromNoteNumber(note) {\n        return 440 * Math.pow(2, (note - 69) / 12);\n    }\n\n    private centsOffFromPitch(frequency, note) {\n        return Math.floor(1200 * Math.log(frequency / this.frequencyFromNoteNumber(note)) / Math.log(2));\n    }\n\n    private MIN_SAMPLES = 0;  // will be initialized when AudioContext is created.\n    private GOOD_ENOUGH_CORRELATION = 0.9; // this is the \"bar\" for how close a correlation needs to be\n\n    // sensitivity to ignore signal\n    public sensitivity: number = 0.06;\n\n    private autoCorrelate(buf, sampleRate) {\n        var SIZE = buf.length;\n        var MAX_SAMPLES = Math.floor(SIZE / 2);\n        var best_offset = -1;\n        var best_correlation = 0;\n        var rms = 0;\n        var foundGoodCorrelation = false;\n        var correlations = new Array(MAX_SAMPLES);\n\n        for (var i = 0; i < SIZE; i++) {\n            var val = buf[i];\n            rms += val * val;\n        }\n        rms = Math.sqrt(rms / SIZE);\n        if (rms < this.sensitivity) // not enough signal\n            return -1;\n\n        var lastCorrelation = 1;\n        for (var offset = this.MIN_SAMPLES; offset < MAX_SAMPLES; offset++) {\n            var correlation = 0;\n\n            for (var i = 0; i < MAX_SAMPLES; i++) {\n                correlation += Math.abs((buf[i]) - (buf[i + offset]));\n            }\n            correlation = 1 - (correlation / MAX_SAMPLES);\n            correlations[offset] = correlation; // store it, for the tweaking we need to do below.\n            if ((correlation > this.GOOD_ENOUGH_CORRELATION) && (correlation > lastCorrelation)) {\n                foundGoodCorrelation = true;\n                if (correlation > best_correlation) {\n                    best_correlation = correlation;\n                    best_offset = offset;\n                }\n            } else if (foundGoodCorrelation) {\n                // short-circuit - we found a good correlation, then a bad one, so we'd just be seeing copies from here.\n                // Now we need to tweak the offset - by interpolating between the values to the left and right of the\n                // best offset, and shifting it a bit.  This is complex, and HACKY in this code (happy to take PRs!) -\n                // we need to do a curve fit on correlations[] around best_offset in order to better determine precise\n                // (anti-aliased) offset.\n\n                // we know best_offset >=1, \n                // since foundGoodCorrelation cannot go to true until the second pass (offset=1), and \n                // we can't drop into this clause until the following pass (else if).\n                var shift = (correlations[best_offset + 1] - correlations[best_offset - 1]) / correlations[best_offset];\n                return sampleRate / (best_offset + (8 * shift));\n            }\n            lastCorrelation = correlation;\n        }\n        if (best_correlation > 0.01) {\n            // console.log(\"f = \" + sampleRate/best_offset + \"Hz (rms: \" + rms + \" confidence: \" + best_correlation + \")\")\n            return sampleRate / best_offset;\n        }\n        return -1;\n        //\tvar best_frequency = sampleRate/best_offset;\n    }\n\n    private updatePitch() {\n        //var cycles = new Array();\n        if (this.analyser == null) {\n            return;\n        }\n        this.analyser.getFloatTimeDomainData(this.buf);\n        var ac = this.autoCorrelate(this.buf, this.audioContext.sampleRate);\n        let self = this;\n        if (ac == -1) {\n            /*\n            detectorElem.className = \"vague\";\n            pitchElem.innerText = \"--\";\n            noteElem.innerText = \"-\";\n            detuneElem.className = \"\";\n            detuneAmount.innerText = \"--\";\n            */\n        } else {\n            //detectorElem.className = \"confident\";\n            var pitch = ac;\n            var pitchElem = Math.round(pitch);\n            var note = this.noteFromPitch(pitch);\n            var noteElem = this.noteStrings[note % 12];\n            var detune = this.centsOffFromPitch(pitch, note);\n            var detuneAmount = 0;\n            var detuneElem = \"\";\n            if (detune == 0) {\n                //detuneElem.className = \"\";\n                detuneAmount = 0;\n            } else {\n                if (detune < 0)\n                    detuneElem = \"flat\";\n                else\n                    detuneElem = \"sharp\";\n                detuneAmount = Math.abs(detune);\n            }\n\n            let pddata = new PitchDetectData(pitchElem, noteElem, detuneElem, detuneAmount);\n            this.observer.next(pddata);\n            //console.log(\"pitch:\" + pitchElem + \", note:\" + noteElem + \", detune:\" + detuneElem + \"(\" + detuneAmount + \")\");\n        }\n\n        if (!window.requestAnimationFrame)\n            window.requestAnimationFrame = window.webkitRequestAnimationFrame;\n        this.rafID = window.requestAnimationFrame(function () {\n            self.updatePitch();\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tuner/pitchdetect.ts","import { Component, OnInit, ElementRef, ApplicationRef, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { NavParams, App } from 'ionic-angular';\nimport { Composition } from '../../player/composition';\nimport { KnobComponent } from 'ng2-knob';\ndeclare var $: any;\n\n@Component({\n\n    templateUrl: 'tempo.component.html',\n    selector: 'tempo'\n})\n\n/**\n * @class\n * @name TempoPage\n * @description Page to display tempo and configure it\n */\nexport class TempoPage implements OnInit {\n    private composition: Composition = null;\n    tempo: number = 0;\n    @ViewChild('myknob1') knob: KnobComponent;\n    @Output(\"save\") saveEvent = new EventEmitter();\n    @Output(\"cancel\") cancelEvent = new EventEmitter();\n\n    constructor(private app: App, private appref: ApplicationRef, navParams: NavParams, private el: ElementRef) {\n        //we get from the params the composition we want to train\n        this.composition = navParams.data;\n    }\n\n    ngOnInit(): void {\n        let width = this.el.nativeElement.offsetWidth;\n        let height = this.el.nativeElement.offsetHeight;\n\n        let size = Math.ceil(width * 0.8);\n        if (width > height) {\n            size = Math.ceil(height * 0.6);\n        }\n\n        $(\".tempo-knob.container-knob\").css(\"width\", size + \"px\");\n        $(\".tempo-knob.container-knob\").css(\"height\", size + \"px\");\n        $(\".tempo-knob.container-knob\").css(\"position\", \"absolute\");\n        $(\".tempo-knob.container-knob\").css(\"margin-left\", \"calc(50% - \" + Math.ceil((size / 2)) + \"px)\");\n        $(\".tempo-knob.container-knob\").css(\"margin-top\", Math.ceil((height / 2) - (size / 2)) + \"px\");\n\n        $(\".tempo-knob.container-knob .skin3\").css(\"width\", size + \"px\");\n        $(\".tempo-knob.container-knob .skin3\").css(\"height\", size + \"px\");\n\n        $(\".tempo-knob.container-knob .knob\").css(\"width\", size + \"px\");\n        $(\".tempo-knob.container-knob .knob\").css(\"height\", size + \"px\");\n\n        this.knob.writeValue(this.composition.currentTempo);\n        this.tempo = this.composition.currentTempo;\n        //look to other place (I need to perform some magic)\n        (<any>this.knob).maxDistance = size;\n    }\n\n    /**\n  * @name setTempo\n  * @description set the tempo of the midi loaded\n  * @param {number} bpm beats per minute\n  */\n    setTempo(bpm: number) {\n        this.tempo = bpm;\n        //----------------------------------------\n        //don't know why this is needed in android\n        this.appref.tick();\n    }\n\n    reset() {\n        this.knob.writeValue(this.composition.originalTempo);\n        this.tempo = this.composition.originalTempo;\n    }\n\n    save() {\n        this.saveEvent.emit(this.tempo);\n    }\n\n    cancel() {\n        this.cancelEvent.emit();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tempo/tempo.component.ts","import { Injectable } from '@angular/core';\nimport { PlayerService } from './player.service';\nimport { Player as InternalMidiPlayer } from './midiplayerjs/player';//midi-player-js';\nimport { Platform } from 'ionic-angular';\nimport { Composition } from './composition';\nimport * as Soundfont from 'soundfont-player';\n//TODO, sf2 for orchestras?\n//import { SoundFontMidiSynth } from './sf2midisynth/soundfont.midi.synth';\n\n/**\n * @interface\n * @name PlayerListener\n * @description a listener definition for certains events of the MidiPlayer\n */\nexport interface MidiPlayerListener {\n    /**\n     * @name midiUpdate\n     * @description Midi event produced\n     * @param <object> event the midi event produced\n     */\n    midiUpdate(event);\n\n    /**\n     * @name finished\n     * @description the song was finished\n     */\n    endOfSong();\n}\n\nexport type TrackInfo = {\n    pointer: number,\n    lastStatus: number,\n    delta: number,\n    runningDelta: number,\n    lastTick: number\n}\n\nexport type MidiInfo = {\n    tempo: number,\n    notes: { tempo: number, tick: number, tracks: TrackInfo[] }[]\n}\n\n/**\n * @class\n * @name MidiPlayer\n * @description MidiPlayer based on midi-player-js and sounffont-player which is able to play and generate sounds. \n */\n@Injectable()\nexport class MidiPlayer {\n    /** the event listener of this player */\n    private listener: MidiPlayerListener\n    private player: InternalMidiPlayer;\n\n    /** we have static fields to avoid creating again these object, which have a huge cost */\n    public static audioContext: AudioContext = new ((<any>window).AudioContext || (<any>window).webkitAudioContext)();//new AudioContext();\n    public static soundfonts: any = {};\n    //TODO, sf2 for orchestras?\n    //public static sf2MidiSynth:SoundFontMidiSynth;\n\n\n    //the preferred tempo, -1 not set\n    private bpm: number = -1;\n    /** indicates the muted Track, if any (>-1) */\n    private mutedTracks: number[] = [];\n    /** the midi data arraybuffer chache */\n    private midiDataArrayBuffer: ArrayBuffer = null;\n    /** circular sound pool */\n    private soundpool: CircularSoundPool;\n    /** last metronome tick */\n    private lastTick = -1;\n    /** to activate or deactivate metronome */\n    private metronome: boolean = false;\n\n    /** if we need highquality sounds or not */\n    private highQuality: boolean = false;\n\n    constructor(private service: PlayerService, private platform: Platform) {\n        this.soundpool = new CircularSoundPool();\n        this.initMidiPlayer();\n    }\n\n    /**\n     * @name setListener\n     * @description set an event listener for this player\n     */\n    public setListener(listener: MidiPlayerListener) {\n        this.listener = listener;\n    }\n\n    /**\n     * @name prepare\n     * @description prepare the midi player to start playing\n     */\n    public prepare() {\n        this.player.prepare();\n    }\n\n    /**\n     * @name getTempo\n     * @description return the tempo of the midi loaded\n     * @return {number} the tempo (bpm)\n     */\n    public getTempo(): number {\n        return this.player.tempo;\n    }\n\n    /**\n     * @name setMetronome\n     * @description activate or deactivate the metronome\n     * @param {boolean} activate true if you want to hear the metronome\n     */\n    public setMetronome(activate: boolean) {\n        this.metronome = activate;\n    }\n\n    /**\n     * @name setHighQuality\n     * @description set or unset the high quality for sounds\n     * @param {boolean} highQuality true if we need high quality for sounds\n     */\n    public setHighQuality(highQuality: boolean, comp: Composition) {\n        if (this.highQuality != highQuality) {\n            this.highQuality = highQuality;\n            MidiPlayer.soundfonts = {};\n            this.loadSoundFonts(comp);\n        }\n    }\n\n    /**\n     * @name getCurrentTime\n     * @description return the current time in milliseconds\n     * @return {number} the current time in milliseconds\n     */\n    public getCurrentTime(): number {\n        let currentTick = this.player.startTick;\n        return currentTick / this.player.division / this.player.tempo * 60000;\n    }\n\n    /**\n     * @name load\n     * @description load the midi data from the composition info\n     * @param {Composition} comp the composition info to load the midi info\n     * @return {Promise<void>} the promise to load the composition\n     */\n    public load(comp: Composition): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this.loadSoundFonts(comp).then(() => {\n                this.service.getMidi(comp).then((data) => {\n                    this.loadMidiData(data);\n                    resolve();\n                });\n            });\n        });\n    }\n\n    /**\n     * @name loadMidiData\n     * @description load the midi data\n     * @param {ArrayBuffer} data the midi data as an arraybuffer\n     */\n    public loadMidiData(data: ArrayBuffer) {\n        this.midiDataArrayBuffer = data;\n        this.player.loadArrayBuffer(data);\n    }\n\n    public play() {\n        this.resume();\n    }\n\n    /**\n     * @name createMap\n     * @description internal function to load the midi and create a map of ticks, find the tempo info, ...\n     * @param {number} itrack the index of the track in which the map will be based on\n     * @return {Promise<MidiInfo>} the promise to return the midi info\n     */\n    public createMap(itrack: number): Promise<MidiInfo> {\n        return new Promise<MidiInfo>((resolve) => {\n            //preparing some variables\n            let result: MidiInfo = { tempo: 0, notes: [] };\n            let foundTempo: boolean = false;\n            let oldEventHandlers = this.player.eventListeners;\n            this.player.eventListeners = {};\n            let player = this.player;\n            player.resetTracks();\n            let currentTick: number = 0;\n            //we need to store delta time to wait ticks\n            let deltaTracks: number[] = [];\n            for (let i = 0; i < player.tracks.length; i++) {\n                deltaTracks.push(0);\n            }\n            let tickDelta = 0;\n\n            let currentTempo: number = 0;\n\n            //lets start reading\n            while (!player.endOfFile()) {\n\n                let tracks: TrackInfo[] = [];\n                //we get info from each track\n                for (let i = 0; i < player.tracks.length; i++) {\n                    let track = player.tracks[i];\n                    let trackInfo: TrackInfo = {\n                        pointer: track.pointer,\n                        lastStatus: track.lastStatus,\n                        delta: track.delta,\n                        runningDelta: track.runningDelta,\n                        lastTick: track.lastTick,\n                    };\n                    let event = track.handleEvent(currentTick, false);\n                    tracks.push(trackInfo)\n\n                    //lets capture the tempo\n                    if (event != null && event.name == 'Set Tempo') {\n                        if (!foundTempo) {\n                            foundTempo = true;\n                            this.player.tempo = event.data;\n                            this.player.setForcedTempo(event.data);\n                            this.player.setOriginalTempo(event.data);\n                        }\n                        currentTempo = event.data;\n                    }\n\n                    //if we are dealing with the front track\n                    if (i == (itrack - 1)) {\n                        if (event != null) {\n                            if (event.name == 'Note on' && event.velocity > 0) {\n                                //a new note, lets save the track infos\n                                result.notes.push({ tempo: currentTempo, tick: currentTick, tracks });\n                            }\n                        }\n                    }\n\n                    if (event != null) {\n                        deltaTracks[i] = track.getDelta();\n                    } else {\n                        deltaTracks[i] = deltaTracks[i] - tickDelta;\n                    }\n                }\n\n                //lets calculate the next tick delta\n                tickDelta = Math.min.apply(null, deltaTracks);\n                if (tickDelta <= 0) {\n                    tickDelta = 5;\n                }\n                currentTick = currentTick + tickDelta;\n            }\n\n            //restoring the player\n            player.resetTracks();\n            this.player.eventListeners = oldEventHandlers;\n\n            resolve(result);\n\n        });\n    }\n\n    /**\n     * @name seek\n     * @description seek the midi player\n     * @param {number} tempo the original tempo of the track at the tick specified\n     * @param {number} tick the tick number to seek\n\t * @param {trackInfos[]} list of track info to restore the status\n     */\n    public seek(tempo: number, tick: number, trackInfos: TrackInfo[]) {\n        this.player.seek(tempo, tick, trackInfos);\n    }\n\n    /**\n     * @name setTempo\n     * @description set the tempo of the midi loaded\n     * @param {number} bpm beats per minute\n     */\n    public setTempo(bpm: number) {\n        if (this.player.isPlaying()) {\n            this.player.pause();\n            this.player.tempo = bpm;\n            this.player.setForcedTempo(bpm);\n            this.player.play();\n        } else {\n            this.bpm = bpm;\n            this.player.tempo = bpm;\n            this.player.setForcedTempo(bpm);\n        }\n    }\n\n    /**\n     * @name initMidiPlayer\n     * @description initialize the midi player\n     */\n    private initMidiPlayer() {\n        this.player = new InternalMidiPlayer(this.midiUpdate.bind(this));\n        this.player.on('endOfFile', function () {\n            this.stop();\n            if (this.listener && this.listener != null) {\n                this.listener.endOfSong();\n            }\n        }.bind(this));\n        this.player.on('playing', function (event) {\n            if (this.player.isPlaying()) {\n                let division = this.player.division;//parts (ticks) per quarter (is quarter the beat reference?)\n                //let tempo = this.player.tempo; //qpm quarter per minute\n                //let tempoBySec = tempo / 60; //qps quarter per second\n\n                let tick = event.tick;\n                let diff = tick - this.lastTick;\n\n                //console.log(\"tick:\" + tick + \";division:\" + division + \";diff:\" + diff);\n\n                if (this.lastTick < 0 || diff >= division) {\n                    //console.log(\">>>>>>>>>>>tick:\" + tick + \";division:\" + division);\n                    if (this.lastTick < 0) {\n                        this.lastTick = 0;\n                    } else {\n                        this.lastTick = this.lastTick + division;\n                    }\n                    //console.log(\"diff:\" + (diff - division));\n                    this.playMetronome(true);\n                }\n            }\n        }.bind(this))\n    }\n\n    /**\n     * @name loadSoundFont\n     * @description load a soundfont from binary js descriptor\n     * @param {string} name the name of the instrument to load\n     * @return {Promise<void>} the promise to load the instrument\n     */\n    private loadSoundFont(name: string): Promise<void> {\n        return new Promise<void>(resolve => {\n            if (name != null && (!MidiPlayer.soundfonts[name] || MidiPlayer.soundfonts[name] == null)) {\n                MidiPlayer.soundfonts[name] = \"loading\";\n                let url: string = this.getInsrumentUrl(name);\n                Soundfont.instrument(MidiPlayer.audioContext, url).then(function (instrument) {\n                    MidiPlayer.soundfonts[name] = instrument;\n                    resolve(instrument);\n                })\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * @name getInstrumentsByTrack\n     * @description get the instruments by track needed for this composition\n     * @param {Composition} composition\n     * @return {string[]} the list of instruments needed by track (index of the array)\n     */\n    private getInstrumentsByTrack(composition: Composition): string[] {\n        //ensuring space in the array\n        let safe = function (object, index: number) {\n            while (object.length <= index) {\n                object.push(null);\n            }\n        }\n        let result = [];\n        let frontName = composition.frontInstrument.name.toLowerCase().trim();\n        safe(result, composition.frontInstrument.track);\n        result[composition.frontInstrument.track] = frontName;\n\n        //front could have a help track\n        if (composition.frontInstrument.help >= 0) {\n            safe(result, composition.frontInstrument.help);\n            result[composition.frontInstrument.help] = frontName;\n        }\n\n        if (composition.backInstruments) {\n            for (let i = 0; i < composition.backInstruments.length; i++) {\n                let backName = composition.backInstruments[i].name.toLowerCase().trim();\n                let track = composition.backInstruments[i].track;\n                safe(result, track);\n                result[track] = backName;\n            }\n        }\n        result[0] = \"metronome\";\n        return result;\n    }\n\n    /**\n     * @name loadSoundFont\n     * @description load the soundfont to play midi files\n     * @return the promise to load the soundfont\n     */\n    public loadSoundFonts(composition: Composition): Promise<void> {\n        return new Promise<void>(resolve => {\n            let instrumentsByTrack: string[] = this.getInstrumentsByTrack(composition);\n\n            //lets remove every instrument not needed from memory\n            if (MidiPlayer.soundfonts) {\n                //we have soundfonts in memory\n                let keys: string[] = Object.keys(MidiPlayer.soundfonts);\n                for (let i = 0; i < keys.length; i++) {\n                    let name: string = keys[i];\n                    let needed: boolean = false;\n\n                    //let search if the instrument is needed\n                    for (let j = 0; j < instrumentsByTrack.length; j++) {\n                        if (instrumentsByTrack[j] === name) {\n                            //yes, it is needed\n                            needed = true;\n                            break;\n                        }\n                    }\n\n                    if (!needed) {\n                        //we don't need the instrument in memory\n                        delete MidiPlayer.soundfonts[name];\n                    }\n                }\n            }\n\n\n            let promises: Promise<void>[] = [];\n            for (let i = 0; i < instrumentsByTrack.length; i++) {\n                promises.push(this.loadSoundFont(instrumentsByTrack[i]));\n            }\n\n            Promise.all(promises).then(() => {\n                this.soundpool.init(instrumentsByTrack);\n                resolve();\n                /*\n                TODO, sf2 for orchestras?\n                this.service.getSoundfont().then((response: ArrayBuffer) => {\n                    let input: Uint8Array = new Uint8Array(response);\n                    MidiPlayer.sf2MidiSynth = new SoundFontMidiSynth();\n                    MidiPlayer.sf2MidiSynth.loadSoundFont(input);\n                    resolve();\n                });\n                */\n            })\n        });\n    }\n\n\n\n    /**\n     * @name playMidiData\n     * @description play the music, start the show!\n     * @param {ArrayBuffer} data the binary data of the midi to be played\n     */\n    public playMidiData(data: ArrayBuffer) {\n        this.player.loadArrayBuffer(data);\n        this.player.play();\n    }\n\n    /**\n     * @name playMetronome\n     * @description play the metronome\n     * @param {boolean} high indicates if we want to hear a high tick metronome pulse or low \n     */\n    public playMetronome(high: boolean) {\n        if (this.metronome) {\n            this.soundpool.play({ noteName: (high ? \"A0\" : \"Bb0\"), track: 0, velocity: 100 });\n        }\n    }\n\n    /**\n     * @name stop\n     * @description stop the current playing\n     */\n    public stop() {\n        this.lastTick = -1;\n        this.player.stop();\n        this.soundpool.stop();\n    }\n\n    /**\n     * @name pause\n     * @description pause the current playing\n     */\n    public pause() {\n        this.player.pause();\n    }\n\n    /**\n     * @name resume\n     * @description resume the current playing\n     */\n    public resume() {\n        this.player.play();\n    }\n\n    /**\n     * @name muteTrack\n     * @description mute a Track\n     * @param {number} track the Track to mute\n     */\n    public muteTrack(track: number) {\n        this.mutedTracks.push(track);\n    }\n\n    /**\n     * @name unmuteTrack\n     * @description unmute a certain track\n     * @param {number} the track to unmute\n     */\n    public unmuteTrack(track: number) {\n        let result: number[] = [];\n        for (let i = 0; i < this.mutedTracks.length; i++) {\n            if (this.mutedTracks[i] != track) {\n                result.push(this.mutedTracks[i]);\n            }\n        }\n        this.mutedTracks = result;\n    }\n\n    /**\n     * @name unmuteTracks\n     * @description unmute all Tracks\n     */\n    public unmuteTracks() {\n        this.mutedTracks = [];\n    }\n\n    /**\n     * @name isMuted\n     * @description check if a certain track is muted or not\n     * @param {number} track the track to chec\n     * @return {boolean} if the track is muted or not\n     */\n    public isMuted(track: number): boolean {\n        for (let i = 0; i < this.mutedTracks.length; i++) {\n            if (this.mutedTracks[i] == track) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * @name midiUpdate\n     * @description a new midi event has been produced\n     * @param event the event produced\n     */\n    midiUpdate(event) {\n        //TODO, sf2 for orchestras?\n        /*\n                console.log(\"EVENT:\" + event.name + \";velocity:\" + event.velocity);\n                if (event.name == 'Note on') {\n                    console.log(\"note\");\n                    if (event.velocity == 0) {\n                        console.log(\"cero\");\n                    }\n                }\n                MidiPlayer.sf2MidiSynth.processMidiMessage(event.message);\n        */\n\n        if (event.name == 'Note on') {\n            if (!this.isMuted(event.track)) {\n                this.soundpool.play(event);\n            }\n        }\n        if (this.listener && this.listener != null) {\n            this.listener.midiUpdate(event);\n        }\n    }\n\n    /**\n     * @name getInstrumentUrl\n     * @description obtain the soundfont url for the instrument we desire\n     * @param {string} instrument the instrument we're trying to get\n     * @return {string} the url to get the js soundfont\n     */\n    private getInsrumentUrl(instrument: string): string {\n        if (instrument.toLowerCase().trim().indexOf(\"metronome\") >= 0) {\n            return 'assets/soundfonts/metronome-wav.js'\n        } else if (instrument.toLowerCase().trim().indexOf(\"piano\") >= 0) {\n            instrument = \"acoustic_grand_piano\";\n        } else if (instrument.toLowerCase().trim().indexOf(\"harp\") >= 0) {\n            instrument = \"orchestral_harp\";\n        }\n\n        let highQualityUrl: string = 'http://gleitz.github.io/midi-js-soundfonts/MusyngKite/';\n        let lowQualityUrl: string = 'https://gleitz.github.io/midi-js-soundfonts/FluidR3_GM/';\n        return (this.highQuality ? highQualityUrl : lowQualityUrl) + instrument.toLowerCase().trim() + '-mp3.js';\n\n        /*\n        let android: boolean = this.platform.is(\"android\");\n        let codec: string = \"wav\"; //TODO, always wav? or try mp3 and then wav? increasing size of the app?\n        if (android) {\n            //unfortunately android mp3 decodification is veeryyyyy slow! (do the same in IOS?)\n            codec = \"wav\";\n        }\n        //remember to avoid using mp3 files as the decode in android is very slow\n        if (instrument.toLowerCase().trim().indexOf(\"flute\") >= 0) {\n            return 'assets/soundfonts/flute-' + codec + '.js'\n        }\n        else if (instrument.toLowerCase().trim().indexOf(\"metronome\") >= 0) {\n            return 'assets/soundfonts/metronome-wav.js'\n        } else if (instrument.toLowerCase().trim().indexOf(\"harp\") >= 0) {\n            return 'assets/soundfonts/harp-wav.js'\n        } else {\n            return 'assets/soundfonts/acoustic_grand_piano-' + codec + '.js';\n        }\n        */\n    }\n}\n\n/**\n * @name CircularSoundPool\n * @description a circular sound pool to avoid playing infinite sounds. The threshold determine how many sounds can be played simultaneously\n */\nclass CircularSoundPool {\n    private trackList = [[]];\n    private pianoIndex: number = 0;\n    private pianoThreshold: number = 8;\n    private instrumentsMap: string[];\n\n    /**\n     * @name init\n     * @description initialize the circular sound pool with a set of instruments by track\n     * @param {string[]} instrumentMap a set of instruments by track (null or not defined means piano)\n     */\n    public init(instrumentMap: string[]) {\n        this.instrumentsMap = instrumentMap;\n        this.trackList = [[]];\n        for (let i = 0; i < this.instrumentsMap.length; i++) {\n            this.trackList.push([]);\n        }\n    }\n\n    /**\n     * @name stop\n     * @description stop all the instruments mapped\n     */\n    public stop() {\n        for (let i = 0; i < this.trackList.length; i++) {\n            if (this.trackList[i] && this.trackList[i] != null) {\n                for (let j = 0; j < this.trackList[i].length; j++) {\n                    let instrument = this.trackList[i][j];\n                    if (instrument && instrument != null) {\n                        instrument.stop();\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @name play\n     * @description play a midi event\n     * @param {any} event a midi event\n     */\n    public play(event) {\n        let track: number = event.track;\n        let strInstrument: string = this.instrumentsMap[track];\n        if (!strInstrument || strInstrument == null) {\n            strInstrument = \"piano\";\n        }\n        let instrument = MidiPlayer.soundfonts[strInstrument];\n        if (!instrument || instrument == null) {\n            strInstrument = \"piano\";\n            instrument = MidiPlayer.soundfonts[\"piano\"];\n        }\n\n        let max = (strInstrument == \"piano\" || strInstrument == \"harp\" ? this.pianoThreshold : 1);\n        let index = (strInstrument == \"piano\" || strInstrument == \"harp\" ? this.pianoIndex : 0);\n\n        if (this.trackList[track][index] && strInstrument != \"metronome\") {\n            this.trackList[track][index].stop();\n        }\n\n\n        var options:any={ gain: 0 };\n        if(event.velocity>0){\n            //console.log(\"velocity:\"+event.velocity);\n            //trying to maximize volume\n            event.velocity=1127;\n            options={\n                gain:5\n            };\n        }\n\n\n        this.trackList[track][index] = instrument.play(event.noteName, MidiPlayer.audioContext.currentTime, options );\n\n        index++;\n        if (index == max) {\n            index = 0;\n        }\n\n        if (strInstrument == \"piano\" || strInstrument == \"harp\") {\n            this.pianoIndex = index;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player/midiplayer.ts","import { Injectable } from '@angular/core';\nimport { PlayerService } from './player.service';\nimport { Platform } from 'ionic-angular';\nimport { SoundManager } from 'soundmanager2';\n\n\n/**\n * @class\n * @name MP3Player\n * @description MP3Player to play mp3 backing tracks\n */\n@Injectable()\nexport class MP3Player {\n    /** the sound manager */\n    public static soundManager: any = null;\n    private soundTrack: any = null;\n    private muted: boolean = false;\n\n    constructor(private service: PlayerService, private platform: Platform) {\n        if (MP3Player.soundManager == null) {\n            MP3Player.soundManager = new SoundManager();\n        } else {\n            MP3Player.soundManager.reset();\n        }\n    }\n\n    public reset() {\n        MP3Player.soundManager.reset();\n    }\n\n    /**\n     * @name init\n     * @description Initialize the mp3 player and start loading the mp3 backing track\n     * @param {string} url the url to get the mp3\n     * @return {Promise<void>} the promise to init and load the mp3\n     */\n    public init(url: string): Promise<void> {\n        return new Promise<void>((resolve) => {\n            MP3Player.soundManager.setup({\n                preferFlash: false, // prefer 100% HTML5 mode, where both supported\n                onready: function () {\n                    // console.log('SM2 ready!');\n                    this.soundTrack = MP3Player.soundManager.createSound({\n                        id: 'backingtrack',\n                        url: url,\n                        html5Only: true,\n                        autoLoad: true,\n                        autoPlay: false,\n                        onload: function () {\n                            // console.log('backingtrack loaded!');\n                            resolve();\n                        },\n                        volume: 100\n                    });\n                    this.mute(this.muted);\n                }.bind(this),\n                ontimeout: function () {\n                    resolve();\n                    console.log('SM2 init failed!');\n                },\n                defaultOptions: {\n                    // set global default volume for all sound objects\n                    volume: 100\n                }\n            });\n            MP3Player.soundManager.beginDelayedInit();\n        });\n    }\n\n    /**\n     * @name seek\n     * @description seek the mp3 player\n     * @param {number} ms the milliseconds to seek\n     * @return {boolean} indicates if it was possible to seek or not depending in the bufered data\n     */\n    public seek(ms: number): boolean {\n        if (this.soundTrack.duration > ms) {\n            this.stop();\n            this.play();\n            this.pause();\n            this.soundTrack.setPosition(ms);\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @name pause\n     * @description pause the current sound track\n     */\n    public pause() {\n        this.soundTrack.pause();\n    }\n\n    /**\n     * @name stop\n     * @description stop the current sound track\n     */\n    public stop() {\n        if (this.soundTrack != null) {\n            this.soundTrack.stop();\n        }\n    }\n\n    /**\n     * @name play\n     * @description play the current sound track\n     */\n    public play() {\n        this.soundTrack.play();\n    }\n\n    /**\n     * @name resume\n     * @description resume the current sound track\n     */\n    public resume() {\n        this.soundTrack.resume();\n    }\n\n    /**\n     * @name mute\n     * @description to mute or unmute the player\n     * @param {boolean} mute the new muted state\n     */\n    public mute(mute: boolean) {\n        this.muted = mute;\n        if (this.soundTrack != null) {\n            if (mute) {\n                this.soundTrack.mute();\n            } else {\n                this.soundTrack.unmute();\n            }\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/player/mp3player.ts","import { Component, ViewChild, ApplicationRef } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { MusicXMLPlayer, PlayerListener } from '../../player/musicxmlplayer';\nimport { Composition } from '../../player/composition';\nimport { PlayerService } from '../../player/player.service';\nimport { NavParams, App } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { Insomnia } from '@ionic-native/insomnia';\nimport { MenuController } from 'ionic-angular';\nimport { DAO } from '../../dao/dao';\nimport { KnobComponent } from 'ng2-knob';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { TempoPage } from '../tempo/tempo.component';\ndeclare var $: any;\n\n@Component({\n    templateUrl: 'trainer.component.html',\n    providers: [MusicXMLPlayer, PlayerService, Insomnia]\n})\n\n/**\n * @class\n * @name PlayerPage\n * @description Page to play a backing track\n */\nexport class TrainerPage implements PlayerListener {\n    svgContent: SafeHtml;\n    tempo: number = 0;\n\n\n    private STATE_STOP = 0;\n    private STATE_PLAYING = 1;\n    private STATE_PAUSED = 2;\n\n    private composition: Composition = null;\n    private state: number = 0;\n    private flagRendering: boolean = false;\n\n    private daoSubscription: Subscription = null;\n    private resizeSubscription: Subscription = null;\n\n    private loadingComponent: string = \"\";\n    private tempoIsVisible = false;\n\n    @ViewChild('myknob1') knob: KnobComponent;\n\n    constructor(private app: App, private appref: ApplicationRef, private menu: MenuController, private insomnia: Insomnia,\n        navParams: NavParams, private player: MusicXMLPlayer, private _sanitizer: DomSanitizer, private dao: DAO,\n        private translate: TranslateService) {\n\n        //we get from the params the composition we want to train\n        this.composition = navParams.data;\n    }\n\n    public enableMenus() {\n        this.menu.enable(true, 'menu-trainer');\n    }\n\n    public disableMenus() {\n        this.menu.enable(false, 'menu-trainer');\n    }\n\n    ionViewDidLeave() {\n        //stopping the player\n        this.player.stop(true);\n        //allowing to sleep again the device\n        this.insomnia.allowSleepAgain();\n        //disabling my menus\n        this.disableMenus();\n\n        //settings unsubscription\n        if (this.daoSubscription != null) {\n            this.daoSubscription.unsubscribe();\n        }\n        //resize unsubscription\n        if (this.resizeSubscription != null) {\n            this.resizeSubscription.unsubscribe();\n        }\n\n        this.dao.updateComposition(this.composition);\n    }\n\n    /**\n     * @name listenResizeEvents\n     * @description we listen the resize events to render again\n     */\n    private listenResizeEvents() {\n        const $resizeEvent = Observable.fromEvent(window, 'resize').debounceTime(200);\n\n        let self = this;\n        this.resizeSubscription = $resizeEvent.subscribe(data => {\n            if (!this.flagRendering) {\n                this.flagRendering = true;\n                if (this.state == this.STATE_PLAYING) {\n                    self.pause();\n                }\n\n                this.loadingComponent = \"score\";\n                this.player.loadAndRenderScore(this.composition).then((svg) => {\n                    this.svgContent = this._sanitizer.bypassSecurityTrustHtml(svg);\n                    this.listenSVG();\n                    this.flagRendering = false;\n                    this.loadingComponent = \"\";\n                });\n            }\n        });\n    }\n\n    /**\n     * @name listenSVG\n     * @description listen click events on the SVG to select notes\n     */\n    private listenSVG() {\n        $(\"#svg\").off(\"click\").click(function (event) {\n            let $target = $(event.target);\n            let tries = 0;\n            //we get the g element\n            if ($target.is(\"svg\")) {\n                $target = $target.find(\">g.music\").eq(0);\n            } else {\n                while (!$target.is(\"g.music\") && tries < 3) {\n                    $target = $target.parent();\n                    tries++;\n                }\n            }\n\n            if ($target.is(\"g.music\")) {\n                if (this.state != this.STATE_PLAYING) {\n                    let response = this.player.select($target, $target.parent().index(), event.clientX, event.clientY);\n                    this.state = this.STATE_PAUSED;\n\n                    if (!response && this.composition.mp3URL && this.composition.mp3URL.length > 0) {\n                        //oh oh! we need to buffer the entire song :(\n                        //TODO ask to the user\n                        this.loadingComponent = \"mp3\";\n                        this.player.preloadMP3().then(() => {\n                            this.loadingComponent = \"\";\n                            this.player.select($target, $target.parent().index(), event.clientX, event.clientY);\n                        });\n                    }\n                }\n            }\n        }.bind(this))\n    }\n\n    ionViewDidEnter() {\n        //enabling my menus\n        this.enableMenus();\n        //we can't go to sleep now\n        this.insomnia.keepAwake();\n\n        //lets start loading\n        this.loadingComponent = \"score\";\n        this.flagRendering = true;\n\n        this.listenResizeEvents();\n        this.dao.getSettings().then((settings) => {\n            this.player.init(this.composition, this, settings);\n        });\n\n\n        this.daoSubscription = this.dao.observeSettings().subscribe((settings) => {\n            this.player.updateSettings(settings);\n        });\n    }\n\n    /**\n     * @name svgLoaded\n     * @description The SVG has been generated\n     * @param {string} svg the svg created\n     * @override\n     */\n    svgLoaded(svg: string): void {\n        this.svgContent = this._sanitizer.bypassSecurityTrustHtml(svg);\n        this.listenSVG();\n        this.loadingComponent = \"audio\";\n    }\n\n\n    /**\n     * @name playerInitialized\n     * @description the player has been initialized\n     * @override\n     */\n    playerInitialized() {\n        let bpm = this.player.getTempo();\n        if (this.composition.originalTempo && this.composition.originalTempo != 0) {\n            bpm = this.composition.currentTempo;\n        } else {\n            this.composition.originalTempo = bpm;\n            this.composition.currentTempo = bpm;\n            this.dao.updateComposition(this.composition);\n        }\n\n        this.tempo = bpm;\n        //----------------------------------------\n        //don't know why this is needed in android\n        this.appref.tick();\n        //----------------------------------------\n\n        this.knob.writeValue(bpm);\n        this.loadingComponent = \"\";\n        //this.loader.dismiss();\n        this.flagRendering = false;\n    }\n\n    /**\n     * @name endOfSong\n     * @description the player has finished\n     * @override\n     */\n    endOfSong() {\n        this.stop();\n    }\n\n    /**\n     * @name endOfSong\n     * @description the player indicates that a new part is starting now\n     * @override\n     */\n    endOfPartSong() {\n        this.pause();\n    }\n\n    /**\n      * @name setTempo\n      * @description set the tempo of the midi loaded\n      * @param {number} bpm beats per minute\n      */\n    setTempo(bpm: number) {\n        this.tempo = bpm;\n        //----------------------------------------\n        //don't know why this is needed in android\n        this.appref.tick();\n        //----------------------------------------\n\n        this.composition.currentTempo = bpm;\n        this.player.setTempo(bpm);\n    }\n\n    /**\n     * @name play\n     * @description play or resume the music\n     */\n    play() {\n        if (this.state == this.STATE_PAUSED) {\n            this.resume();\n        } else if (this.state == this.STATE_STOP) {\n            this.state = this.STATE_PLAYING;\n            this.showPrepare().then(() => {\n                this.player.play();\n            });\n        }\n    }\n\n    /**\n     * @name pause\n     * @description pause the music\n     */\n    pause() {\n        if (this.state == this.STATE_PLAYING) {\n            this.state = this.STATE_PAUSED;\n            this.player.pause();\n        }\n    }\n\n    /**\n     * @name stop\n     * @description stop the music\n     */\n    stop() {\n        if (this.state == this.STATE_PAUSED || this.state == this.STATE_PLAYING) {\n            this.state = this.STATE_STOP;\n            this.player.stop();\n            //seems necesary in android\n            this.appref.tick();\n        }\n    }\n\n    /**\n     * @name resume\n     * @description resume the music\n     */\n    resume() {\n        this.state = this.STATE_PLAYING;\n        this.showPrepare().then(() => {\n            this.player.resume();\n        });\n    }\n\n    onKnobClick() {\n        this.tempoIsVisible = true;\n    }\n\n    private prepare = -1;\n\n    /**\n     * @name showPrepare\n     * @description show the prepare screen, before starting the music\n     * @return {Promise<void>} resolve when all the preparation has been finished \n     */\n    private showPrepare(): Promise<void> {\n        this.player.prepare();\n        return new Promise<void>((resolve) => {\n            let numerator = this.player.getMeterSignatureNumerator();\n            while (numerator > 4) {\n                numerator = numerator / 2;\n            }\n            let bpm = this.player.getTempo(); //bpm\n            let time: number = 60000 / bpm;\n\n            this.prepare = 0;\n            this.dao.getSettings().then((settings) => {\n                let double: boolean = settings.playerSettings.doublePreparation;\n                let cycle = 0;\n\n                let show = function () {\n                    this.prepare++;\n\n                    if (this.state != this.STATE_PLAYING) {\n                        this.prepare = -1;\n                        return;\n                    }\n\n                    if (this.prepare > numerator && double && cycle < 1) {\n                        cycle++;\n                        this.prepare = 1;\n                        this.player.playMetronome(true);\n                        setTimeout(show.bind(this), time);\n                    } else if (this.prepare <= numerator) {\n                        this.player.playMetronome(true);\n                        setTimeout(show.bind(this), time);\n                    } else {\n                        this.prepare = -1;\n                        resolve();\n                    }\n                };\n\n                setTimeout(show.bind(this), 1000);\n\n            });\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/trainer/trainer.component.ts","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { Composition, Collection } from '../../../player/composition';\nimport { PopoverController, NavParams, ViewController } from 'ionic-angular';\n\n\n@Component({\n  templateUrl: 'sort.component.html'\n})\nexport class SortPage {\n  public static SORT_BY_NAME = \"NAME\";\n  public static SORT_BY_AUTHOR = \"AUTHOR\";\n  public static SORT_BY_LEVEL = \"LEVEL\";\n  public sortby: string = SortPage.SORT_BY_NAME;\n\n  constructor(public navParams: NavParams, public viewCtrl: ViewController) {\n    this.sortby = this.navParams.get(\"data\");\n  }\n\n  close() {\n    this.viewCtrl.dismiss(this.sortby);\n  }\n\n  sort(sortBy: string) {\n    this.sortby = sortBy;\n    this.close();\n  }\n\n  /**\n   * @name sort\n   * @description sort an array of compositions by a given criteria\n   * @param {string} by the criteria,  @see SORT_BY_NAME and SORT_BY_AUTHOR\n   * @param {Composition[]} compositions the list to sort\n   * @result {Composition[]} the array sorted\n   */\n  public static sort(by: string, compositions: Composition[]): Composition[] {\n    return compositions.sort(function (a: Composition, b: Composition): number {\n\n      //default case sort by composition name\n      let a1field: any = a.name;\n      let b1field: any = b.name;\n      let a2field: string = a.author;\n      let b2field: string = b.author;\n\n      //case sort by author\n      if (by == SortPage.SORT_BY_AUTHOR) {\n        a1field = a.author;\n        b1field = b.author;\n        a2field = a.name;\n        b2field = b.name;\n      }\n\n      //case sort by level\n      if (by == SortPage.SORT_BY_LEVEL) {\n        a1field = a.level;\n        b1field = b.level;\n        a2field = a.name;\n        b2field = b.name;\n      }\n\n      if (a1field === b1field) {\n        if (a2field == b2field) {\n          if (a.level == b.level) {\n            if (a.frontInstrument.name == b.frontInstrument.name) return 0;\n            if (a.frontInstrument.name < b.frontInstrument.name) return -1;\n            if (a.frontInstrument.name > b.frontInstrument.name) return 1;\n          } else {\n            if (a.level < b.level) return -1;\n            if (a.level > b.level) return 1;\n          }\n        } else {\n          if (a2field < b2field) return -1;\n          if (a2field > b2field) return 1;\n        }\n      } else {\n        if (a1field < b1field) return -1;\n        if (a1field > b1field) return 1;\n      }\n      return 1;\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/main/sort/sort.component.ts"],"sourceRoot":""}